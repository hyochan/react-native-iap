#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

echo "🚀 Running comprehensive pre-commit checks (matching CI)..."

# Function to check if command exists
command_exists() {
  command -v "$1" >/dev/null 2>&1
}

# Check if bun is available for example-expo checks
EXAMPLE_EXPO_CHANGED=$(git diff --cached --name-only | grep -q "^example-expo/" && echo "true" || echo "false")

# 1. Run lint-staged for changed files
echo "✨ Running lint-staged..."
yarn lint-staged
if [ $? -ne 0 ]; then
  echo "❌ Lint-staged failed. Please fix errors before committing."
  exit 1
fi

# 2. Library TypeScript check (matches ci-lint.yml)
echo "🔍 [CI-LINT] Running library TypeScript check..."
yarn typecheck:lib
if [ $? -ne 0 ]; then
  echo "❌ [CI-LINT] Library TypeScript check failed. Please fix errors before committing."
  exit 1
fi

# 3. Library ESLint check (matches ci-lint.yml)
echo "🔍 [CI-LINT] Running library ESLint..."
yarn lint
if [ $? -ne 0 ]; then
  echo "❌ [CI-LINT] Library ESLint check failed. Please fix errors before committing."
  exit 1
fi

# 4. Example-expo checks if changed (matches ci-example-expo.yml)
if [ "$EXAMPLE_EXPO_CHANGED" = "true" ]; then
  if command_exists bun; then
    echo "🔍 [CI-EXAMPLE-EXPO] Running example-expo TypeScript check..."
    cd example-expo && bun run typecheck && cd ..
    if [ $? -ne 0 ]; then
      echo "❌ [CI-EXAMPLE-EXPO] Example-expo TypeScript check failed. Please fix errors before committing."
      exit 1
    fi
    
    echo "🔍 [CI-EXAMPLE-EXPO] Running example-expo ESLint..."
    cd example-expo && bun run lint && cd ..
    if [ $? -ne 0 ]; then
      echo "❌ [CI-EXAMPLE-EXPO] Example-expo ESLint check failed. Please fix errors before committing."
      exit 1
    fi
  else
    echo "⚠️ [CI-EXAMPLE-EXPO] Bun not found. Skipping example-expo checks."
    echo "   Install bun globally to enable example-expo pre-commit checks."
  fi
fi

# 5. Nitro code generation if .nitro.ts files were changed
if git diff --cached --name-only | grep -q "\.nitro\.ts$"; then
  echo "⚙️ [NITRO] Regenerating Nitro code..."
  yarn specs
  if [ $? -ne 0 ]; then
    echo "❌ [NITRO] Nitro code generation failed. Please fix errors before committing."
    exit 1
  fi
  
  # Nitro generated files are gitignored, so no need to add them
  echo "✅ [NITRO] Nitro code regenerated successfully."
fi

# 6. Library build check (light version of ci-library.yml)
if git diff --cached --name-only | grep -qE "(src/|android/|ios/|nitrogen/)"; then
  echo "🔨 [BUILD] Running library build check..."
  yarn prepare 2>/dev/null || {
    echo "⚠️ [BUILD] Library build check failed. This may cause CI build failures."
    echo "   Consider running 'yarn prepare' manually to verify build."
  }
fi

# 7. Run tests to prevent regressions (block on failure)
RUN_LIB_TESTS=false
RUN_EXAMPLE_TESTS=false

if git diff --cached --name-only | grep -qE "^(src/|plugin/|jest\\.|package\\.json|yarn\\.lock)"; then
  RUN_LIB_TESTS=true
fi
if git diff --cached --name-only | grep -qE "^example/(screens|components|__tests__|package\\.json)"; then
  RUN_EXAMPLE_TESTS=true
fi

if [ "$RUN_LIB_TESTS" = "true" ]; then
  echo "🧪 [TEST] Running library tests with coverage..."
  yarn test:ci
  if [ $? -ne 0 ]; then
    echo "❌ [TEST] Library tests failed. Fix tests before committing."
    exit 1
  fi
fi

if [ "$RUN_EXAMPLE_TESTS" = "true" ]; then
  echo "🧪 [TEST] Running example app tests with coverage..."
  yarn test:ci:example
  if [ $? -ne 0 ]; then
    echo "❌ [TEST] Example tests failed. Fix tests before committing."
    exit 1
  fi
fi

echo "✅ All pre-commit checks passed! 🎉"
echo "📋 Checks performed:"
echo "   ✓ Lint-staged (file formatting)"
echo "   ✓ Library TypeScript & ESLint"
if [ "$EXAMPLE_EXPO_CHANGED" = "true" ]; then
  echo "   ✓ Example-expo TypeScript & ESLint"
fi
echo "   ✓ Nitro code generation (if needed)"
echo "   ✓ Build validation (if needed)"
if [ "$RUN_LIB_TESTS" = "true" ] || [ "$RUN_EXAMPLE_TESTS" = "true" ]; then
  echo "   ✓ Tests (${RUN_LIB_TESTS:+library }${RUN_EXAMPLE_TESTS:+example})"
fi
echo ""
echo "🚀 Ready to commit! This should pass all CI checks."
