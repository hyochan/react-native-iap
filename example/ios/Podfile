# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip
require 'json'

versions_path = File.expand_path('../../openiap-versions.json', __dir__)
unless File.exist?(versions_path)
  raise 'react-native-iap example: Missing openiap-versions.json at repo root.'
end

openiap_versions = JSON.parse(File.read(versions_path))
openiap_apple_version = openiap_versions['apple']
unless openiap_apple_version.is_a?(String) && !openiap_apple_version.strip.empty?
  raise 'react-native-iap example: "apple" version missing or invalid in openiap-versions.json.'
end

# Use CDN with fallback
source 'https://cdn.cocoapods.org/'

platform :ios, min_ios_version_supported
prepare_react_native_project!

# IMPORTANT: React Native + New Architecture requires static libraries.
# Do NOT enable use_frameworks! to avoid non-modular include errors.
# (If your env sets USE_FRAMEWORKS, it will be ignored here.)

target 'example' do
  config = use_native_modules!

  # Force absolute app path to avoid overly nested relative paths in build scripts
  app_path = File.expand_path('..', __dir__)

  use_react_native!(
    :path => config[:reactNativePath],
    # Absolute path to the application root prevents runaway ../../ segments
    :app_path => app_path
  )

  # Work around CDN/trunk propagation delay by pulling OpenIAP directly from Git.
  pod 'openiap', :git => 'https://github.com/hyodotdev/openiap-apple.git', :tag => openiap_apple_version

  post_install do |installer|
    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      # :ccache_enabled => true
    )

    # Force safe static-library settings to avoid non-modular include errors
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        # Do not build pods as modules/frameworks
        config.build_settings['DEFINES_MODULE'] = 'NO'
        config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'NO'
        # Allow non-modular includes within any pods that still ship framework-like headers
        config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
      end
    end

  end
end
