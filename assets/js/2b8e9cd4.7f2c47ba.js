"use strict";(self.webpackChunkreact_native_iap_docs=self.webpackChunkreact_native_iap_docs||[]).push([[5886],{1231:e=>{e.exports=JSON.parse('{"permalink":"/react-native-iap/blog/release-14.4.12","editUrl":"https://github.com/hyochan/react-native-iap/tree/main/docs/blog/2025-10-04-release-14.4.12.md","source":"@site/blog/2025-10-04-release-14.4.12.md","title":"Release 14.4.12 - Alternative Billing Support","description":"React Native IAP 14.4.12 adds comprehensive alternative billing support for both Android and iOS, enabling external payment systems alongside platform billing.","date":"2025-10-04T00:00:00.000Z","tags":[{"inline":false,"label":"Release","permalink":"/react-native-iap/blog/tags/release","description":"New version releases and updates"},{"inline":true,"label":"alternative-billing","permalink":"/react-native-iap/blog/tags/alternative-billing"},{"inline":true,"label":"google-play","permalink":"/react-native-iap/blog/tags/google-play"},{"inline":true,"label":"storekit","permalink":"/react-native-iap/blog/tags/storekit"}],"readingTime":4.49,"hasTruncateMarker":true,"authors":[{"name":"Hyo","title":"React Native IAP Maintainer","url":"https://github.com/hyochan","page":{"permalink":"/react-native-iap/blog/authors/hyochan"},"socials":{"github":"https://github.com/hyochan","linkedin":"https://www.linkedin.com/in/hyochanjang/","x":"https://x.com/hyodotdev"},"imageURL":"https://github.com/hyochan.png","key":"hyochan"}],"frontMatter":{"slug":"release-14.4.12","title":"Release 14.4.12 - Alternative Billing Support","authors":["hyochan"],"tags":["release","alternative-billing","google-play","storekit"],"description":"React Native IAP 14.4.12 adds comprehensive alternative billing support for both Android and iOS, enabling external payment systems alongside platform billing.","image":"https://github.com/hyochan/react-native-iap/raw/main/docs/static/img/logo.png"},"unlisted":false,"prevItem":{"title":"14.4.12 - Alternative Billing Support","permalink":"/react-native-iap/blog/release-14.4.12"},"nextItem":{"title":"Release 14.4.0 - Full OpenIAP Ecosystem Adoption","permalink":"/react-native-iap/blog/release-14.4.0"}}')},3237:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var l=i(1231),t=i(4848),r=i(8453);const a={slug:"release-14.4.12",title:"Release 14.4.12 - Alternative Billing Support",authors:["hyochan"],tags:["release","alternative-billing","google-play","storekit"],description:"React Native IAP 14.4.12 adds comprehensive alternative billing support for both Android and iOS, enabling external payment systems alongside platform billing.",image:"https://github.com/hyochan/react-native-iap/raw/main/docs/static/img/logo.png"},s="React Native IAP 14.4.12",o={authorsImageUrls:[void 0]},c=[{value:"\ud83d\ude80 What&#39;s New",id:"-whats-new",level:2},{value:"Alternative Billing APIs",id:"alternative-billing-apis",level:3},{value:"Android",id:"android",level:4},{value:"iOS",id:"ios",level:4},{value:"New APIs",id:"new-apis",level:3},{value:"Android Alternative Billing",id:"android-alternative-billing",level:4},{value:"iOS External Purchase",id:"ios-external-purchase",level:4},{value:"Expo Config Plugin Enhancement",id:"expo-config-plugin-enhancement",level:3},{value:"useIAP Hook Integration",id:"useiap-hook-integration",level:3},{value:"Example App",id:"example-app",level:3},{value:"Features",id:"features",level:4},{value:"Access",id:"access",level:4},{value:"\ud83d\udd27 Technical Details",id:"-technical-details",level:2},{value:"Android Implementation",id:"android-implementation",level:3},{value:"iOS Implementation",id:"ios-implementation",level:3},{value:"Type Safety",id:"type-safety",level:3},{value:"\ud83d\udcd6 Documentation",id:"-documentation",level:2},{value:"\u26a0\ufe0f Important Notes",id:"\ufe0f-important-notes",level:2},{value:"Platform Approval Required",id:"platform-approval-required",level:3},{value:"Compliance Requirements",id:"compliance-requirements",level:3},{value:"Supported Regions",id:"supported-regions",level:3},{value:"\ud83d\udce6 Installation",id:"-installation",level:2},{value:"\ud83d\udd17 References",id:"-references",level:2},{value:"\ud83d\ude4f Acknowledgments",id:"-acknowledgments",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://github.com/hyochan/react-native-iap/raw/main/docs/static/img/logo.png",alt:"React Native IAP Logo"})}),"\n",(0,t.jsxs)(n.p,{children:["React Native IAP 14.4.12 introduces comprehensive ",(0,t.jsx)(n.strong,{children:"alternative billing"})," support for both iOS and Android, empowering developers to use external payment systems alongside or instead of App Store and Google Play billing. This enables reduced platform fees and greater flexibility in monetization strategies while maintaining compliance with platform policies."]}),"\n",(0,t.jsx)(n.h2,{id:"-whats-new",children:"\ud83d\ude80 What's New"}),"\n",(0,t.jsx)(n.h3,{id:"alternative-billing-apis",children:"Alternative Billing APIs"}),"\n",(0,t.jsx)(n.p,{children:"This release adds full alternative billing functionality for both platforms:"}),"\n",(0,t.jsx)(n.h4,{id:"android",children:"Android"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Alternative Billing Only Mode"}),": Exclusive use of your payment system"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"User Choice Billing Mode"}),": Users choose between Google Play and your payment system"]}),"\n",(0,t.jsx)(n.li,{children:"Three-step flow: check availability \u2192 show dialog \u2192 create reporting token"}),"\n",(0,t.jsx)(n.li,{children:"Automatic token generation for Google Play reporting (required within 24 hours)"}),"\n",(0,t.jsx)(n.li,{children:"Reduced service fees (4% reduction when using alternative billing)"}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"ios",children:"iOS"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"External Purchase Links"}),": Redirect users to your external website (iOS 16.0+)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Purchase Notice Sheets"}),": Required disclosure before external redirects (iOS 18.2+)"]}),"\n",(0,t.jsx)(n.li,{children:"Expo config plugin support for automatic entitlement and Info.plist setup"}),"\n",(0,t.jsx)(n.li,{children:"Support for multiple URLs per country (up to 5 for music streaming apps)"}),"\n",(0,t.jsx)(n.li,{children:"Custom link regions and streaming-specific configurations"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"new-apis",children:"New APIs"}),"\n",(0,t.jsx)(n.h4,{id:"android-alternative-billing",children:"Android Alternative Billing"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import {\n  initConnection,\n  checkAlternativeBillingAvailabilityAndroid,\n  showAlternativeBillingDialogAndroid,\n  createAlternativeBillingTokenAndroid,\n  userChoiceBillingListenerAndroid,\n} from 'react-native-iap';\n\n// Initialize with alternative billing mode\nawait initConnection({\n  alternativeBillingModeAndroid: 'alternative-only', // or 'user-choice'\n});\n\n// 3-step alternative billing flow\nconst isAvailable = await checkAlternativeBillingAvailabilityAndroid();\nconst userAccepted = await showAlternativeBillingDialogAndroid();\nconst token = await createAlternativeBillingTokenAndroid(productId);\n\n// User choice billing event listener\nconst subscription = userChoiceBillingListenerAndroid((details) => {\n  console.log('User selected alternative billing');\n  // Report to backend for Google Play compliance\n});\n"})}),"\n",(0,t.jsx)(n.h4,{id:"ios-external-purchase",children:"iOS External Purchase"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import {\n  canPresentExternalPurchaseNoticeIOS,\n  presentExternalPurchaseNoticeSheetIOS,\n  presentExternalPurchaseLinkIOS,\n} from 'react-native-iap';\n\n// Check availability (iOS 18.2+)\nconst canPresent = await canPresentExternalPurchaseNoticeIOS();\n\n// Present notice sheet before external link\nconst noticeResult = await presentExternalPurchaseNoticeSheetIOS();\n\nif (noticeResult.result === 'continue') {\n  // Redirect to external purchase URL\n  const result = await presentExternalPurchaseLinkIOS(\n    'https://your-website.com/purchase',\n  );\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"expo-config-plugin-enhancement",children:"Expo Config Plugin Enhancement"}),"\n",(0,t.jsx)(n.p,{children:"Automatic iOS alternative billing configuration:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"// app.config.ts\nexport default {\n  plugins: [\n    [\n      'react-native-iap',\n      {\n        iosAlternativeBilling: {\n          // Required: Countries (ISO 3166-1 alpha-2)\n          countries: ['kr', 'nl', 'de', 'fr'],\n\n          // Optional: External URLs per country\n          links: {\n            kr: 'https://your-site.com/kr/checkout',\n            nl: 'https://your-site.com/nl/checkout',\n          },\n\n          // Optional: Multiple URLs (iOS 17.5+, up to 5)\n          multiLinks: {\n            de: [\n              'https://your-site.com/de/checkout',\n              'https://your-site.com/de/offer',\n            ],\n          },\n\n          // Optional: Custom regions (iOS 18.1+)\n          customLinkRegions: ['de', 'fr', 'nl'],\n\n          // Optional: Streaming regions (iOS 18.2+, music apps)\n          streamingLinkRegions: ['at', 'de', 'fr', 'nl'],\n\n          // Enable entitlements\n          enableExternalPurchaseLink: true,\n          enableExternalPurchaseLinkStreaming: false, // music apps only\n        },\n      },\n    ],\n  ],\n};\n"})}),"\n",(0,t.jsx)(n.p,{children:"The config plugin automatically adds:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Required entitlements (",(0,t.jsx)(n.code,{children:"com.apple.developer.storekit.external-purchase"}),", etc.)"]}),"\n",(0,t.jsxs)(n.li,{children:["Info.plist configuration (",(0,t.jsx)(n.code,{children:"SKExternalPurchase"}),", ",(0,t.jsx)(n.code,{children:"SKExternalPurchaseLink"}),", etc.)"]}),"\n",(0,t.jsx)(n.li,{children:"Proper URL validation and country code formatting"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"useiap-hook-integration",children:"useIAP Hook Integration"}),"\n",(0,t.jsxs)(n.p,{children:["Alternative billing is fully integrated into the ",(0,t.jsx)(n.code,{children:"useIAP"})," hook:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import {useIAP} from 'react-native-iap';\n\nconst {\n  checkAlternativeBillingAvailabilityAndroid,\n  showAlternativeBillingDialogAndroid,\n  createAlternativeBillingTokenAndroid,\n} = useIAP({\n  // Android alternative billing configuration\n  alternativeBillingModeAndroid: 'alternative-only',\n\n  // User choice billing event handler\n  onUserChoiceBillingAndroid: (details) => {\n    console.log('User selected alternative billing');\n    reportToBackend(details.externalTransactionToken);\n  },\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"example-app",children:"Example App"}),"\n",(0,t.jsx)(n.p,{children:"A complete alternative billing example is now included in the example app:"}),"\n",(0,t.jsx)(n.h4,{id:"features",children:"Features"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Platform-specific flows (iOS external URLs vs. Android billing modes)"}),"\n",(0,t.jsx)(n.li,{children:"Billing mode switcher for Android (alternative-only vs. user-choice)"}),"\n",(0,t.jsx)(n.li,{children:"Real-time status updates and result display"}),"\n",(0,t.jsx)(n.li,{children:"Step-by-step guidance for compliance requirements"}),"\n",(0,t.jsx)(n.li,{children:"Deep linking recommendations for iOS"}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"access",children:"Access"}),"\n",(0,t.jsx)(n.p,{children:'Run the example app and navigate to "Alternative Billing" from the home screen.'}),"\n",(0,t.jsx)(n.h2,{id:"-technical-details",children:"\ud83d\udd27 Technical Details"}),"\n",(0,t.jsx)(n.h3,{id:"android-implementation",children:"Android Implementation"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Uses OpenIAP Google v1.2.12 with native alternative billing support"}),"\n",(0,t.jsx)(n.li,{children:"Auto-reconnection handling for billing service state"}),"\n",(0,t.jsx)(n.li,{children:"Proper token creation and reporting flow"}),"\n",(0,t.jsx)(n.li,{children:"User choice billing listener with event deduplication"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"ios-implementation",children:"iOS Implementation"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Leverages StoreKit External Purchase APIs (iOS 16.0+)"}),"\n",(0,t.jsx)(n.li,{children:"Support for new notice sheets (iOS 18.2+)"}),"\n",(0,t.jsx)(n.li,{children:"Proper entitlement management via config plugin"}),"\n",(0,t.jsx)(n.li,{children:"URL validation and country code handling"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"type-safety",children:"Type Safety"}),"\n",(0,t.jsx)(n.p,{children:"All alternative billing APIs are fully typed with TypeScript:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"AlternativeBillingModeAndroid"}),": ",(0,t.jsx)(n.code,{children:"'none'"})," | ",(0,t.jsx)(n.code,{children:"'alternative-only'"})," | ",(0,t.jsx)(n.code,{children:"'user-choice'"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"UserChoiceBillingDetails"}),": Product list and external transaction token"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ExternalPurchaseNoticeResultIOS"}),": Notice sheet result with action"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ExternalPurchaseLinkResultIOS"}),": External link presentation result"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"-documentation",children:"\ud83d\udcd6 Documentation"}),"\n",(0,t.jsx)(n.p,{children:"Comprehensive documentation added:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"API Reference"}),": Complete method signatures and examples in ",(0,t.jsx)(n.a,{href:"/docs/api/methods/core-methods#alternative-billing-apis",children:"Core Methods"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type Definitions"}),": All alternative billing types in ",(0,t.jsx)(n.a,{href:"/docs/api/types",children:"Types"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Expo Plugin Guide"}),": Configuration examples and requirements"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Example App"}),": Working implementation for both platforms"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"\ufe0f-important-notes",children:"\u26a0\ufe0f Important Notes"}),"\n",(0,t.jsx)(n.h3,{id:"platform-approval-required",children:"Platform Approval Required"}),"\n",(0,t.jsx)(n.p,{children:"Both platforms require special approval to use alternative billing:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"iOS"}),": External purchase entitlement approval from Apple"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Android"}),": Alternative billing approval in Google Play Console"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"compliance-requirements",children:"Compliance Requirements"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"iOS"}),": URLs must use HTTPS, no query parameters, \u22641,000 characters"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Android"}),": External transaction tokens must be reported within 24 hours"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Fees"}),": Reduced platform fees apply (varies by platform and region)"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"supported-regions",children:"Supported Regions"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"iOS"}),": US, EU, and approved countries (varies by feature)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Android"}),": South Korea, India, EEA (varies by app type)"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"-installation",children:"\ud83d\udce6 Installation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm install react-native-iap@14.4.12\n# or\nyarn add react-native-iap@14.4.12\n# or\nbun add react-native-iap@14.4.12\n"})}),"\n",(0,t.jsxs)(n.p,{children:["For Expo projects, run ",(0,t.jsx)(n.code,{children:"npx expo prebuild"})," after updating your config plugin."]}),"\n",(0,t.jsx)(n.h2,{id:"-references",children:"\ud83d\udd17 References"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"OpenIAP Alternative Billing"}),": ",(0,t.jsx)(n.a,{href:"https://www.openiap.dev/docs/alternative-billing",children:"openiap.dev/docs/alternative-billing"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Apple External Purchase"}),": ",(0,t.jsx)(n.a,{href:"https://developer.apple.com/documentation/storekit/external-purchase",children:"developer.apple.com/storekit/external-purchase"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Google Alternative Billing"}),": ",(0,t.jsx)(n.a,{href:"https://developer.android.com/google/play/billing/alternative",children:"developer.android.com/google/play/billing/alternative"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"OpenIAP Apple"}),": v1.2.10 with external purchase support"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"OpenIAP Google"}),": v1.2.12 with alternative billing APIs"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"-acknowledgments",children:"\ud83d\ude4f Acknowledgments"}),"\n",(0,t.jsxs)(n.p,{children:["This release builds on the alternative billing implementation from ",(0,t.jsx)(n.a,{href:"https://github.com/hyochan/expo-iap",children:"expo-iap"}),", bringing the same powerful features to React Native CLI projects."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:["Try out alternative billing in 14.4.12 and let us know your feedback via ",(0,t.jsx)(n.a,{href:"https://github.com/hyochan/react-native-iap/issues",children:"GitHub issues"}),"!"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>s});var l=i(6540);const t={},r=l.createContext(t);function a(e){const n=l.useContext(r);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),l.createElement(r.Provider,{value:n},e.children)}}}]);