"use strict";(self.webpackChunkreact_native_iap_docs=self.webpackChunkreact_native_iap_docs||[]).push([[7519],{2506:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>s,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"getting-started/setup-horizon","title":"Horizon OS","description":"This guide covers setting up react-native-iap for Meta Quest devices running Horizon OS. Horizon OS uses Meta\'s Platform SDK for in-app purchases instead of Google Play Billing.","source":"@site/docs/getting-started/setup-horizon.md","sourceDirName":"getting-started","slug":"/getting-started/setup-horizon","permalink":"/react-native-iap/docs/getting-started/setup-horizon","draft":false,"unlisted":false,"editUrl":"https://github.com/hyochan/react-native-iap/tree/main/docs/docs/getting-started/setup-horizon.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Android Setup","permalink":"/react-native-iap/docs/getting-started/setup-android"},"next":{"title":"Purchases","permalink":"/react-native-iap/docs/guides/purchases"}}');var o=i(4848),t=i(8453);const a={sidebar_position:4},d="Horizon OS",s={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"React Native IAP Configuration",id:"react-native-iap-configuration",level:2},{value:"1. Enable Horizon Mode",id:"1-enable-horizon-mode",level:3},{value:"2. Add Horizon App ID to AndroidManifest.xml",id:"2-add-horizon-app-id-to-androidmanifestxml",level:3},{value:"3. Clean and Rebuild",id:"3-clean-and-rebuild",level:3},{value:"Code Integration",id:"code-integration",level:2},{value:"Build Configuration",id:"build-configuration",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"&quot;Activity not available&quot; Error",id:"activity-not-available-error",level:3},{value:"Product IDs Not Found",id:"product-ids-not-found",level:3},{value:"Wrong Artifact Being Used",id:"wrong-artifact-being-used",level:3},{value:"Next Steps",id:"next-steps",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"horizon-os",children:"Horizon OS"})}),"\n",(0,o.jsx)(n.p,{children:"This guide covers setting up react-native-iap for Meta Quest devices running Horizon OS. Horizon OS uses Meta's Platform SDK for in-app purchases instead of Google Play Billing."}),"\n",(0,o.jsxs)(n.admonition,{title:"OpenIAP Horizon Setup",type:"info",children:[(0,o.jsx)(n.p,{children:"For detailed Horizon OS setup instructions including environment configuration, SDK setup, and platform integration details, refer to the official OpenIAP documentation:"}),(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"https://www.openiap.dev/docs/horizon-setup",children:"OpenIAP Horizon OS Setup Guide"})})}),(0,o.jsx)(n.p,{children:"This guide focuses on react-native-iap specific configuration."})]}),"\n",(0,o.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Meta Quest Developer account"}),"\n",(0,o.jsx)(n.li,{children:"App created in Meta Quest Developer Hub"}),"\n",(0,o.jsx)(n.li,{children:"Quest device or Quest Link for testing"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"react-native-iap-configuration",children:"React Native IAP Configuration"}),"\n",(0,o.jsxs)(n.admonition,{title:"Example Configuration",type:"tip",children:[(0,o.jsx)(n.p,{children:"You can refer to the example app for a working configuration. See the commented sections in:"}),(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://github.com/hyochan/react-native-iap/blob/main/example/android/gradle.properties",children:(0,o.jsx)(n.code,{children:"example/android/gradle.properties"})})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://github.com/hyochan/react-native-iap/blob/main/example/android/app/src/main/AndroidManifest.xml",children:(0,o.jsx)(n.code,{children:"example/android/app/src/main/AndroidManifest.xml"})})}),"\n"]})]}),"\n",(0,o.jsx)(n.h3,{id:"1-enable-horizon-mode",children:"1. Enable Horizon Mode"}),"\n",(0,o.jsxs)(n.p,{children:["Add ",(0,o.jsx)(n.code,{children:"horizonEnabled=true"})," to your ",(0,o.jsx)(n.code,{children:"android/gradle.properties"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-properties",children:"# Enable Horizon OS support (Meta Quest)\nhorizonEnabled=true\n"})}),"\n",(0,o.jsx)(n.h3,{id:"2-add-horizon-app-id-to-androidmanifestxml",children:"2. Add Horizon App ID to AndroidManifest.xml"}),"\n",(0,o.jsxs)(n.p,{children:["Add the Horizon App ID metadata to your ",(0,o.jsx)(n.code,{children:"android/app/src/main/AndroidManifest.xml"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<application>\n  \x3c!-- Other configurations --\x3e\n\n  \x3c!-- Meta Horizon App ID (required for Horizon OS) --\x3e\n  <meta-data\n    android:name="com.meta.horizon.platform.ovr.OCULUS_APP_ID"\n    android:value="YOUR_HORIZON_APP_ID" />\n</application>\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Get your App ID from ",(0,o.jsx)(n.a,{href:"https://developer.oculus.com/",children:"Meta Quest Developer Hub"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"3-clean-and-rebuild",children:"3. Clean and Rebuild"}),"\n",(0,o.jsx)(n.p,{children:"After configuration, clean and rebuild your app:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"cd android\n./gradlew clean\ncd ..\nnpx react-native run-android\n"})}),"\n",(0,o.jsx)(n.p,{children:"This will:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Use ",(0,o.jsx)(n.code,{children:"openiap-google-horizon"})," artifact instead of ",(0,o.jsx)(n.code,{children:"openiap-google"})]}),"\n",(0,o.jsx)(n.li,{children:"Add Horizon Platform SDK dependencies"}),"\n",(0,o.jsx)(n.li,{children:"Configure the app with your Horizon App ID"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"code-integration",children:"Code Integration"}),"\n",(0,o.jsx)(n.p,{children:"The code integration for Horizon OS is identical to standard Android integration. react-native-iap handles the platform differences automatically."}),"\n",(0,o.jsxs)(n.p,{children:["Use the same ",(0,o.jsx)(n.code,{children:"useIAP"})," hook and API methods as you would for Android or iOS. See the ",(0,o.jsx)(n.a,{href:"../guides/purchases",children:"Purchases Guide"})," for complete examples."]}),"\n",(0,o.jsx)(n.h2,{id:"build-configuration",children:"Build Configuration"}),"\n",(0,o.jsx)(n.p,{children:"When you enable Horizon mode, react-native-iap automatically:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Adds Dependencies"}),": Includes Horizon Platform SDK and Horizon Billing SDK"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Uses Correct Artifact"}),": Switches to ",(0,o.jsx)(n.code,{children:"openiap-google-horizon"})," instead of ",(0,o.jsx)(n.code,{children:"openiap-google"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Configures AndroidManifest"}),": Your manually added Horizon App ID is used"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"You can verify the configuration by checking:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check gradle.properties\ncat android/gradle.properties | grep horizonEnabled\n\n# Check dependency tree\ncd android && ./gradlew :react-native-iap:dependencies --configuration debugRuntimeClasspath | grep openiap-google\n"})}),"\n",(0,o.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,o.jsx)(n.h3,{id:"activity-not-available-error",children:'"Activity not available" Error'}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Solution"}),": This was fixed in react-native-iap 14.4.31+. Update to the latest version:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm install react-native-iap@latest\n# or\nyarn add react-native-iap@latest\n"})}),"\n",(0,o.jsx)(n.h3,{id:"product-ids-not-found",children:"Product IDs Not Found"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Solutions"}),":"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Verify product IDs match in Meta Quest Developer Hub"}),"\n",(0,o.jsx)(n.li,{children:"Ensure products are published and active"}),"\n",(0,o.jsx)(n.li,{children:"Check that your Horizon App ID is correct in AndroidManifest.xml"}),"\n",(0,o.jsxs)(n.li,{children:["Clean and rebuild: ",(0,o.jsx)(n.code,{children:"cd android && ./gradlew clean"})]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"wrong-artifact-being-used",children:"Wrong Artifact Being Used"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Solutions"}),":"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Check that ",(0,o.jsx)(n.code,{children:"horizonEnabled=true"})," is in ",(0,o.jsx)(n.code,{children:"android/gradle.properties"})]}),"\n",(0,o.jsxs)(n.li,{children:["Clean build: ",(0,o.jsx)(n.code,{children:"cd android && ./gradlew clean"})]}),"\n",(0,o.jsx)(n.li,{children:"Check build logs to verify correct artifact is being used"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"../guides/purchases",children:"Purchases Guide"})," - Learn how to implement purchases"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"../api/error-codes",children:"Error Codes"})," - Understand error handling"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://www.openiap.dev/docs/horizon-setup",children:"OpenIAP Horizon Setup"})," - Detailed platform setup"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>d});var r=i(6540);const o={},t=r.createContext(o);function a(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);