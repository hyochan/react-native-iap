"use strict";(self.webpackChunkreact_native_iap_docs=self.webpackChunkreact_native_iap_docs||[]).push([[7978],{8045:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"14.1","label":"14.1","banner":"unmaintained","badge":true,"noIndex":false,"className":"docs-version-14.1","isLast":false,"docsSidebars":{},"docs":{"api/error-codes":{"id":"api/error-codes","title":"Error Codes","description":"React Native IAP uses standardized error codes that conform to the OpenIAP specification."},"api/index":{"id":"api/index","title":"API Reference","description":"Welcome to the React Native IAP API documentation. Here you\'ll find comprehensive guides and references for all the features and functionality available in React Native IAP."},"api/methods/core-methods":{"id":"api/methods/core-methods","title":"Core Methods","description":"This section covers the core methods available in react-native-iap for managing in-app purchases."},"api/methods/listeners":{"id":"api/methods/listeners","title":"Listeners","description":"react-native-iap provides event listeners to handle purchase updates and errors. These listeners are essential for handling the asynchronous nature of in-app purchases."},"api/types":{"id":"api/types","title":"Types","description":"OpenIAP Type Definitions"},"api/use-iap":{"id":"api/use-iap","title":"useIAP Hook","description":"The useIAP hook is the main interface for interacting with in-app purchases in React Native IAP. It provides a comprehensive API for managing purchases, subscriptions, and error handling."},"examples/basic-store":{"id":"examples/basic-store","title":"Basic Store Implementation","description":"This example shows how to implement a basic in-app purchase store using react-native-iap."},"examples/complete-impl":{"id":"examples/complete-impl","title":"Complete Purchase","description":"This example shows how to properly complete a purchase transaction with receipt validation and finishTransaction."},"examples/subscription-manager":{"id":"examples/subscription-manager","title":"Subscription Management","description":"This guide demonstrates how to implement subscription management with React Native IAP, including subscription status checking, renewal handling, and subscription management UI."},"getting-started/setup-android":{"id":"getting-started/setup-android","title":"Android Setup","description":"For complete Android setup instructions including Google Play Console configuration, app setup, and testing guidelines, please visit:"},"getting-started/setup-ios":{"id":"getting-started/setup-ios","title":"iOS Setup","description":"For complete iOS setup instructions including App Store Connect configuration, Xcode setup, and testing guidelines, please visit:"},"guides/error-handling":{"id":"guides/error-handling","title":"Error Handling","description":"This guide covers best practices for handling errors in your react-native-iap implementation."},"guides/faq":{"id":"guides/faq","title":"Frequently Asked Questions","description":"General Questions"},"guides/getting-started":{"id":"guides/getting-started","title":"Getting Started","description":"react-native-iap is a powerful in-app purchase solution specifically designed for Expo and React Native applications. It provides a unified API for handling in-app purchases across iOS and Android platforms with comprehensive error handling and modern TypeScript support."},"guides/ios-hot-reload-fix":{"id":"guides/ios-hot-reload-fix","title":"iOS Hot Reload Fix","description":"Overview"},"guides/ios-subscription-offers":{"id":"guides/ios-subscription-offers","title":"iOS Subscription Offers","description":"This guide explains how to implement and manage subscription offers (introductory and promotional) for iOS in react-native-iap."},"guides/lifecycle":{"id":"guides/lifecycle","title":"Lifecycle","description":"For complete understanding of the in-app purchase lifecycle, flow diagrams, and state management, please visit:"},"guides/offer-code-redemption":{"id":"guides/offer-code-redemption","title":"Offer Code Redemption","description":"This guide explains how to implement offer code redemption functionality in your app using react-native-iap."},"guides/purchases":{"id":"guides/purchases","title":"Purchases","description":"Purchase Flow Redesign"},"guides/support":{"id":"guides/support","title":"Support & Contributing","description":"We welcome contributions and are here to help you succeed with react-native-iap!"},"guides/troubleshooting":{"id":"guides/troubleshooting","title":"Troubleshooting","description":"This guide covers common issues you might encounter when implementing in-app purchases with react-native-iap and how to resolve them."},"installation":{"id":"installation","title":"Installation","description":"This guide will help you install and configure React Native IAP in your React Native or Expo project."},"intro":{"id":"intro","title":"React Native IAP","description":"React Native IAP is a high-performance in-app purchase library using Nitro Modules that conforms to the Open IAP specification. It provides a unified API for handling in-app purchases across iOS and Android platforms with comprehensive error handling and modern TypeScript support."},"sponsors":{"id":"sponsors","title":"Sponsors","description":"Support react-native-iap development through sponsorship"}}}}')}}]);