"use strict";(self.webpackChunkreact_native_iap_docs=self.webpackChunkreact_native_iap_docs||[]).push([[9946],{571:(e,n,s)=>{s.d(n,{A:()=>a});var i=s(6540),r=s(4848);function t({className:e="adfit",style:n,unit:s,height:t,width:a}){return(0,i.useEffect)(()=>{const n=setTimeout(()=>{const n=document.querySelector(`.${e}`);if(!n)return void console.warn(`AdFit: Element with class "${e}" not found`);const i=n.querySelectorAll(".kakao_ad_area"),r=n.querySelectorAll('script[src*="kas/static/ba.min.js"]');i.forEach(e=>e.remove()),r.forEach(e=>e.remove());const c=document.createElement("ins"),o=document.createElement("script");c.className="kakao_ad_area",c.style.cssText="display:none; width:100%;",o.async=!0,o.type="text/javascript",o.src="//t1.daumcdn.net/kas/static/ba.min.js",c.setAttribute("data-ad-width",a.toString()),c.setAttribute("data-ad-height",t.toString()),c.setAttribute("data-ad-unit",s),n.appendChild(c),n.appendChild(o)},100);return()=>clearTimeout(n)},[e,s,t,a]),(0,r.jsx)("div",{style:n,children:(0,r.jsx)("div",{className:e})})}function a(){return(0,r.jsx)(t,{unit:"DAN-YTmjDwlbcP42HBg6",height:100,width:320,className:"adfit-top",style:{flex:1,marginTop:24,marginBottom:24}})}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>c});var i=s(6540);const r={},t=i.createContext(r);function a(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(t.Provider,{value:n},e.children)}},8949:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"examples/purchase-flow","title":"Purchase Flow Example","description":"This guide demonstrates a clean purchase flow using react-native-iap with the useIAP hook and the new platform\u2011specific request shape.","source":"@site/docs/examples/purchase-flow.md","sourceDirName":"examples","slug":"/examples/purchase-flow","permalink":"/react-native-iap/docs/examples/purchase-flow","draft":false,"unlisted":false,"editUrl":"https://github.com/hyochan/react-native-iap/tree/main/docs/docs/examples/purchase-flow.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Purchase Flow Example","sidebar_label":"Purchase Flow","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Support","permalink":"/react-native-iap/docs/guides/support"},"next":{"title":"Subscriptions Flow","permalink":"/react-native-iap/docs/examples/subscription-flow"}}');var r=s(4848),t=s(8453),a=s(571);const c={title:"Purchase Flow Example",sidebar_label:"Purchase Flow",sidebar_position:1},o="Purchase Flow",l={},d=[{value:"Flow Overview",id:"flow-overview",level:2},{value:"Key Concepts",id:"key-concepts",level:2},{value:"1. Connection Management",id:"1-connection-management",level:3},{value:"2. Product Loading",id:"2-product-loading",level:3},{value:"3. Purchase Flow",id:"3-purchase-flow",level:3},{value:"4. Receipt Validation",id:"4-receipt-validation",level:3},{value:"5. User Experience",id:"5-user-experience",level:3},{value:"Platform Differences",id:"platform-differences",level:2},{value:"Purchase Request Parameters",id:"purchase-request-parameters",level:3},{value:"Key iOS Options",id:"key-ios-options",level:3},{value:"Purchase Object Properties",id:"purchase-object-properties",level:3},{value:"Receipt Validation",id:"receipt-validation",level:3},{value:"Usage",id:"usage",level:2},{value:"Customization",id:"customization",level:2},{value:"Next Steps",id:"next-steps",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"purchase-flow",children:"Purchase Flow"})}),"\n",(0,r.jsx)(a.A,{}),"\n",(0,r.jsxs)(n.p,{children:["This guide demonstrates a clean purchase flow using react-native-iap with the ",(0,r.jsx)(n.code,{children:"useIAP"})," hook and the new platform\u2011specific request shape."]}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsxs)(n.mdxAdmonitionTitle,{children:["The complete working example can be found at ",(0,r.jsx)(n.a,{href:"https://github.com/hyochan/react-native-iap/blob/main/example/screens/PurchaseFlow.tsx",children:"example/screens/PurchaseFlow.tsx"}),". Note that the example code was heavily vibe-coded with Claude and is quite verbose/messy for demonstration purposes - use it as a reference only. :::"]}),(0,r.jsx)(n.h2,{id:"flow-overview",children:"Flow Overview"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Initialize: ",(0,r.jsx)(n.code,{children:"useIAP"})," manages the store connection lifecycle"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Load products:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"fetchProducts({ skus, type: 'in-app' })"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Start purchase:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"requestPurchase({ request: { ios: { sku }, android: { skus: [sku] } }, type: 'in-app' })"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Receive callbacks: ",(0,r.jsx)(n.code,{children:"onPurchaseSuccess"})," / ",(0,r.jsx)(n.code,{children:"onPurchaseError"})," (from ",(0,r.jsx)(n.code,{children:"useIAP"}),")"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Validate server\u2011side: send receipt/JWS or token to your backend"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Finish transaction:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"finishTransaction({ purchase, isConsumable })"})}),"\n"]}),"\n"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-txt",children:"Connect \u2192 Fetch Products \u2192 Request Purchase \u2192 Server Validate \u2192 Finish Transaction\n"})}),(0,r.jsx)(n.h2,{id:"key-concepts",children:"Key Concepts"}),(0,r.jsx)(n.h3,{id:"1-connection-management",children:"1. Connection Management"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"useIAP"})," automatically opens/closes the connection"]}),"\n",(0,r.jsxs)(n.li,{children:["Exposes ",(0,r.jsx)(n.code,{children:"connected"}),", convenient for showing loading states"]}),"\n"]}),(0,r.jsx)(n.h3,{id:"2-product-loading",children:"2. Product Loading"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Load in\u2011app products or subscriptions (set ",(0,r.jsx)(n.code,{children:"type"}),")"]}),"\n",(0,r.jsx)(n.li,{children:"Handle and log failed product fetches"}),"\n"]}),(0,r.jsx)(n.h3,{id:"3-purchase-flow",children:"3. Purchase Flow"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Start purchases via unified request shape (no ",(0,r.jsx)(n.code,{children:"Platform.OS"})," branching)"]}),"\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"onPurchaseSuccess"}),"/",(0,r.jsx)(n.code,{children:"onPurchaseError"})," from ",(0,r.jsx)(n.code,{children:"useIAP"})]}),"\n",(0,r.jsxs)(n.li,{children:["Always call ",(0,r.jsx)(n.code,{children:"finishTransaction"})," after server validation"]}),"\n"]}),(0,r.jsx)(n.h3,{id:"4-receipt-validation",children:"4. Receipt Validation"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Perform validation on your backend (never only on device)"}),"\n",(0,r.jsx)(n.li,{children:"iOS: validate the receipt/JWS; Android: validate purchase token + package name"}),"\n"]}),(0,r.jsx)(n.h3,{id:"5-user-experience",children:"5. User Experience"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Provide clear states for loading, success, and error"}),"\n",(0,r.jsx)(n.li,{children:"Show subscription management/deep\u2011links when appropriate"}),"\n"]}),(0,r.jsx)(n.h2,{id:"platform-differences",children:"Platform Differences"}),(0,r.jsx)(n.h3,{id:"purchase-request-parameters",children:"Purchase Request Parameters"}),(0,r.jsxs)(n.p,{children:["Use the modern, platform\u2011specific request container (v2.7.0+). This avoids manual ",(0,r.jsx)(n.code,{children:"Platform.OS"})," checks:"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"await requestPurchase({\n  request: {\n    ios: {sku: productId, quantity: 1},\n    android: {skus: [productId]},\n  },\n  type: 'in-app',\n});\n"})}),(0,r.jsx)(n.p,{children:"Notes:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Keep ",(0,r.jsx)(n.code,{children:"andDangerouslyFinishTransactionAutomatically"})," off (default) to validate first."]}),"\n"]}),(0,r.jsx)(n.h3,{id:"key-ios-options",children:"Key iOS Options"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"appAccountToken"}),": set per user to correlate receipts on your backend"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"quantity"}),": purchase quantity for iOS (consumables)"]}),"\n"]}),(0,r.jsx)(n.h3,{id:"purchase-object-properties",children:"Purchase Object Properties"}),(0,r.jsx)(n.p,{children:"Purchase objects have different properties on iOS and Android. When accessing platform-specific properties, TypeScript type casting is required:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"// Unified fields\nconst token = purchase.purchaseToken; // iOS JWS or Android token\n\n// Android-only helpers\n// const pkg = (purchase as PurchaseAndroid).packageNameAndroid;\n"})}),(0,r.jsx)(n.h3,{id:"receipt-validation",children:"Receipt Validation"}),(0,r.jsx)(n.p,{children:"Receipt validation requires different approaches:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"iOS: verify receipt/JWS on your server against Apple"}),"\n",(0,r.jsx)(n.li,{children:"Android: verify token and package name against Google Play Developer API"}),"\n"]}),(0,r.jsx)(n.h2,{id:"usage",children:"Usage"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import React from 'react';\nimport {NavigationContainer} from '@react-navigation/native';\nimport PurchaseFlow from './purchase-flow';\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <PurchaseFlow />\n    </NavigationContainer>\n  );\n}\n"})}),(0,r.jsx)(n.h2,{id:"customization",children:"Customization"}),(0,r.jsx)(n.p,{children:"You can customize this example by:"}),(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Styling"}),": Modify the ",(0,r.jsx)(n.code,{children:"styles"})," object to match your app's design"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Product IDs"}),": Update ",(0,r.jsx)(n.code,{children:"PRODUCT_IDS"})," with your actual product IDs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Validation"}),": Implement proper server-side receipt validation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Error Handling"}),": Add more specific error handling for your use case"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Features"}),": Add features like purchase restoration, subscription management, etc."]}),"\n"]}),(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Implement proper ",(0,r.jsx)(n.a,{href:"../guides/purchases#receipt-validation",children:"receipt validation"})]}),"\n",(0,r.jsxs)(n.li,{children:["Add ",(0,r.jsx)(n.a,{href:"../guides/purchases#purchase-restoration",children:"purchase restoration"})]}),"\n",(0,r.jsxs)(n.li,{children:["Handle ",(0,r.jsx)(n.a,{href:"../api/methods/core-methods#deeplinktosubscriptions",children:"subscription management"})]}),"\n",(0,r.jsxs)(n.li,{children:["Add comprehensive ",(0,r.jsx)(n.a,{href:"../api/error-handling",children:"error handling"})]}),"\n"]})]})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);