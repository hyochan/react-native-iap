"use strict";(self.webpackChunkreact_native_iap_docs=self.webpackChunkreact_native_iap_docs||[]).push([[9946],{571:(e,n,s)=>{s.d(n,{A:()=>a});var i=s(6540),r=s(4848);function t({className:e="adfit",style:n,unit:s,height:t,width:a}){return(0,i.useEffect)(()=>{const n=setTimeout(()=>{const n=document.querySelector(`.${e}`);if(!n)return void console.warn(`AdFit: Element with class "${e}" not found`);const i=n.querySelectorAll(".kakao_ad_area"),r=n.querySelectorAll('script[src*="kas/static/ba.min.js"]');i.forEach(e=>e.remove()),r.forEach(e=>e.remove());const c=document.createElement("ins"),o=document.createElement("script");c.className="kakao_ad_area",c.style.cssText="display:none; width:100%;",o.async=!0,o.type="text/javascript",o.src="//t1.daumcdn.net/kas/static/ba.min.js",c.setAttribute("data-ad-width",a.toString()),c.setAttribute("data-ad-height",t.toString()),c.setAttribute("data-ad-unit",s),n.appendChild(c),n.appendChild(o)},100);return()=>clearTimeout(n)},[e,s,t,a]),(0,r.jsx)("div",{style:n,children:(0,r.jsx)("div",{className:e})})}function a(){return(0,r.jsx)(t,{unit:"DAN-YTmjDwlbcP42HBg6",height:100,width:320,className:"adfit-top",style:{flex:1,marginTop:24,marginBottom:24}})}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>c});var i=s(6540);const r={},t=i.createContext(r);function a(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(t.Provider,{value:n},e.children)}},8949:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>c,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"examples/purchase-flow","title":"Purchase Flow","description":"An end-to-end in-app purchase flow using the useIAP hook. This mirrors the example screen used in the app.","source":"@site/docs/examples/purchase-flow.md","sourceDirName":"examples","slug":"/examples/purchase-flow","permalink":"/react-native-iap/docs/examples/purchase-flow","draft":false,"unlisted":false,"editUrl":"https://github.com/hyochan/react-native-iap/tree/main/docs/docs/examples/purchase-flow.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Purchase Flow","sidebar_label":"Purchase Flow","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Error Codes","permalink":"/react-native-iap/docs/api/error-codes"},"next":{"title":"Subscriptions","permalink":"/react-native-iap/docs/examples/subscription-flow"}}');var r=s(4848),t=s(8453),a=s(571);const c={title:"Purchase Flow",sidebar_label:"Purchase Flow",sidebar_position:1},o="Purchase Flow (Products)",l={},d=[{value:"Highlights",id:"highlights",level:2},{value:"Flow Overview",id:"flow-overview",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Minimal Pattern",id:"minimal-pattern",level:2},{value:"iOS App Transaction",id:"ios-app-transaction",level:2},{value:"Notes",id:"notes",level:2},{value:"Example server validation",id:"example-server-validation",level:3},{value:"Testing Checklist",id:"testing-checklist",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Source",id:"source",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"purchase-flow-products",children:"Purchase Flow (Products)"})}),"\n",(0,r.jsx)(a.A,{}),"\n",(0,r.jsxs)(n.p,{children:["An end-to-end in-app purchase flow using the ",(0,r.jsx)(n.code,{children:"useIAP"})," hook. This mirrors the example screen used in the app."]}),"\n",(0,r.jsx)(n.h2,{id:"highlights",children:"Highlights"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Product loading via ",(0,r.jsx)(n.code,{children:"fetchProducts"})]}),"\n",(0,r.jsxs)(n.li,{children:["Purchase via ",(0,r.jsx)(n.code,{children:"requestPurchase"})]}),"\n",(0,r.jsxs)(n.li,{children:["Handle results in ",(0,r.jsx)(n.code,{children:"onPurchaseSuccess"})," / ",(0,r.jsx)(n.code,{children:"onPurchaseError"})]}),"\n",(0,r.jsxs)(n.li,{children:["Always call ",(0,r.jsx)(n.code,{children:"finishTransaction"})]}),"\n",(0,r.jsxs)(n.li,{children:["iOS app transaction check with ",(0,r.jsx)(n.code,{children:"getAppTransactionIOS"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"flow-overview",children:"Flow Overview"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["initConnection: Established automatically by ",(0,r.jsx)(n.code,{children:"useIAP"})," on mount; wait for ",(0,r.jsx)(n.code,{children:"connected === true"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"fetchProducts: Load your products once connected."}),"\n",(0,r.jsx)(n.li,{children:"requestPurchase: Trigger a purchase for the selected product."}),"\n",(0,r.jsxs)(n.li,{children:["Server validation: Validate ",(0,r.jsx)(n.code,{children:"purchase.purchaseToken"})," on your backend."]}),"\n",(0,r.jsx)(n.li,{children:"finishTransaction: Only after successful validation, complete the transaction."}),"\n",(0,r.jsxs)(n.li,{children:["Optional: Refresh prior purchases via ",(0,r.jsx)(n.code,{children:"getAvailablePurchases()"})," to update UI."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Configure products in App Store Connect and Google Play Console"}),"\n",(0,r.jsx)(n.li,{children:"Decide consumable vs non-consumable behavior"}),"\n",(0,r.jsxs)(n.li,{children:["Prepare a backend endpoint to validate ",(0,r.jsx)(n.code,{children:"purchaseToken"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"minimal-pattern",children:"Minimal Pattern"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import {useIAP, requestPurchase, getAppTransactionIOS} from 'react-native-iap';\n\nconst PRODUCT_IDS = ['your.consumable', 'your.nonconsumable'];\n\nexport function PurchaseFlowExample() {\n  const {connected, products, fetchProducts, finishTransaction} = useIAP({\n    onPurchaseSuccess: async (purchase) => {\n      // 4) Validate on your server first, then finish\n      const ok = await validateReceiptOnServer(purchase);\n      if (ok) {\n        await finishTransaction({purchase, isConsumable: true});\n      }\n    },\n    onPurchaseError: (e) => {\n      // optional: show a toast/alert\n      console.warn('Purchase failed', e);\n    },\n  });\n\n  useEffect(() => {\n    // 1) initConnection happens automatically in the hook\n    // 2) Once connected, fetch products\n    if (connected) fetchProducts({skus: PRODUCT_IDS, type: 'in-app'});\n  }, [connected, fetchProducts]);\n\n  const buy = async (productId: string) => {\n    // 3) Request purchase; result comes via onPurchaseSuccess/onPurchaseError\n    await requestPurchase({\n      request: {\n        ios: {sku: productId},\n        android: {skus: [productId]},\n      },\n      type: 'in-app',\n    });\n  };\n\n  return null;\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"ios-app-transaction",children:"iOS App Transaction"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const tx = await getAppTransactionIOS();\n"})}),"\n",(0,r.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Validate receipts server-side using ",(0,r.jsx)(n.code,{children:"purchase.purchaseToken"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Call ",(0,r.jsx)(n.code,{children:"finishTransaction"})," for every successful purchase."]}),"\n",(0,r.jsxs)(n.li,{children:["Results arrive through listeners (via the hook callbacks), not the return value of ",(0,r.jsx)(n.code,{children:"requestPurchase"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"example-server-validation",children:"Example server validation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"async function validateReceiptOnServer(purchase: {\n  purchaseToken: string;\n  productId?: string;\n}) {\n  const res = await fetch('https://your.server/validate', {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      platform: Platform.OS,\n      productId: purchase.productId,\n      purchaseToken: purchase.purchaseToken,\n    }),\n  });\n  const json = await res.json();\n  return Boolean(json?.isValid);\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"testing-checklist",children:"Testing Checklist"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use sandbox/test accounts on both platforms"}),"\n",(0,r.jsxs)(n.li,{children:["Verify your server receives ",(0,r.jsx)(n.code,{children:"purchaseToken"})," and productId"]}),"\n",(0,r.jsxs)(n.li,{children:["Confirm ",(0,r.jsx)(n.code,{children:"finishTransaction"})," clears pending transactions"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Purchase not delivered: ensure ",(0,r.jsx)(n.code,{children:"onPurchaseSuccess"})," fires and ",(0,r.jsx)(n.code,{children:"finishTransaction"})," is called after validation"]}),"\n",(0,r.jsxs)(n.li,{children:["iOS cancelled: ",(0,r.jsx)(n.code,{children:"E_USER_CANCELLED"})," \u2014 no action required"]}),"\n",(0,r.jsx)(n.li,{children:"Non-consumables: hide already-owned items based on available purchases"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"source",children:"Source"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["PurchaseFlow.tsx: ",(0,r.jsx)(n.a,{href:"https://github.com/hyochan/react-native-iap/blob/main/example/screens/PurchaseFlow.tsx",children:"https://github.com/hyochan/react-native-iap/blob/main/example/screens/PurchaseFlow.tsx"})]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);