"use strict";(self.webpackChunkreact_native_iap_docs=self.webpackChunkreact_native_iap_docs||[]).push([[7495],{9563:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"14.4.33","metadata":{"permalink":"/react-native-iap/blog/14.4.33","editUrl":"https://github.com/hyochan/react-native-iap/tree/main/docs/blog/2025-10-28-horizon-os-support.md","source":"@site/blog/2025-10-28-horizon-os-support.md","title":"14.4.33 - Horizon OS Support","description":"Horizon OS Support","date":"2025-10-28T00:00:00.000Z","tags":[{"inline":false,"label":"Release","permalink":"/react-native-iap/blog/tags/release","description":"New version releases and updates"},{"inline":true,"label":"horizon-os","permalink":"/react-native-iap/blog/tags/horizon-os"},{"inline":false,"label":"Android","permalink":"/react-native-iap/blog/tags/android","description":"Android platform specific features"},{"inline":true,"label":"meta-quest","permalink":"/react-native-iap/blog/tags/meta-quest"},{"inline":true,"label":"vr","permalink":"/react-native-iap/blog/tags/vr"}],"readingTime":1.81,"hasTruncateMarker":true,"authors":[{"name":"Hyo","title":"React Native IAP Maintainer","url":"https://github.com/hyochan","page":{"permalink":"/react-native-iap/blog/authors/hyochan"},"socials":{"github":"https://github.com/hyochan","linkedin":"https://www.linkedin.com/in/hyochanjang/","x":"https://x.com/hyodotdev"},"imageURL":"https://github.com/hyochan.png","key":"hyochan"}],"frontMatter":{"slug":"14.4.33","title":"14.4.33 - Horizon OS Support","authors":["hyochan"],"tags":["release","horizon-os","android","meta-quest","vr"],"date":"2025-10-28T00:00:00.000Z"},"unlisted":false,"nextItem":{"title":"14.4.12 - Alternative Billing Support","permalink":"/react-native-iap/blog/release-14.4.12-alternative-billing"}},"content":"![Horizon OS Support](/img/horizon.png)\\n\\nReact Native IAP 14.4.33 introduces **Horizon OS support** for Meta Quest devices, enabling developers to implement in-app purchases in VR applications using the same familiar API.\\n\\nThis release integrates Meta\'s Platform SDK for in-app purchases on Horizon OS, while maintaining the unified [OpenIAP](https://openiap.dev) interface across iOS, Android, and now Horizon OS.\\n\\n\ud83d\udc49 [View the 14.4.33 release](https://github.com/hyochan/react-native-iap/releases/tag/14.4.33)\\n\\n\x3c!-- truncate --\x3e\\n\\n## \ud83d\ude80 Highlights\\n\\n### Seamless Horizon OS Integration\\n\\nReact Native IAP now supports Meta Quest devices running Horizon OS with **zero code changes** required. Simply enable Horizon mode in your configuration, and your existing purchase code works seamlessly across all platforms.\\n\\n**Key Features**:\\n\\n- \u2705 In-app purchases (consumable and non-consumable)\\n- \u2705 Subscriptions\\n- \u2705 Purchase restoration\\n- \u2705 Product fetching with localized pricing\\n- \u2705 Purchase verification\\n- \u2705 Same API as iOS and Android - no platform-specific code needed\\n\\n### Configuration Setup\\n\\nEnable Horizon OS support with two simple configuration steps:\\n\\n**1. Enable Horizon mode** in `android/gradle.properties`:\\n\\n```properties\\n# Enable Horizon OS support (Meta Quest)\\nhorizonEnabled=true\\n```\\n\\n**2. Add Horizon App ID** to `android/app/src/main/AndroidManifest.xml`:\\n\\n```xml\\n<application>\\n  \x3c!-- Meta Horizon App ID (required for Horizon OS) --\x3e\\n  <meta-data\\n    android:name=\\"com.meta.horizon.platform.ovr.OCULUS_APP_ID\\"\\n    android:value=\\"YOUR_HORIZON_APP_ID\\" />\\n</application>\\n```\\n\\nFor detailed setup instructions, see the [Horizon OS Setup Guide](/docs/getting-started/setup-horizon).\\n\\nThe configuration automatically:\\n\\n- Uses `openiap-google-horizon` artifact instead of `openiap-google`\\n- Adds Horizon Platform SDK and Billing SDK dependencies\\n- Configures your app with the Horizon App ID metadata\\n\\n## \ud83d\udce6 Getting Started\\n\\nTo get started with Horizon OS integration:\\n\\n1. **Install react-native-iap 14.4.33 or later**:\\n\\n   ```bash\\n   npm install react-native-iap@14.4.33\\n   # or\\n   yarn add react-native-iap@14.4.33\\n   # or\\n   bun add react-native-iap@14.4.33\\n   ```\\n\\n2. **Follow the setup guide**: See the [Horizon OS Setup Guide](/docs/getting-started/setup-horizon) for detailed instructions on configuration, testing, and troubleshooting.\\n\\n**No Breaking Changes**: All changes are additive. Existing apps will continue to work without modifications. Horizon support is opt-in via configuration.\\n\\n## \ud83d\udd17 References\\n\\n- [Horizon OS Setup Guide](/docs/getting-started/setup-horizon)\\n- [OpenIAP Documentation](https://openiap.dev)\\n- [Meta Quest Developer Hub](https://developer.oculus.com/)\\n\\nQuestions or issues? Let us know via [GitHub issues](https://github.com/hyochan/react-native-iap/issues)."},{"id":"release-14.4.12-alternative-billing","metadata":{"permalink":"/react-native-iap/blog/release-14.4.12-alternative-billing","editUrl":"https://github.com/hyochan/react-native-iap/tree/main/docs/blog/2025-10-05-release-14.4.12-alternative-billing.md","source":"@site/blog/2025-10-05-release-14.4.12-alternative-billing.md","title":"14.4.12 - Alternative Billing Support","description":"React Native IAP 14.4.12 introduces comprehensive alternative billing support for both iOS and Android, enabling external payment systems with reduced platform fees.","date":"2025-10-05T00:00:00.000Z","tags":[{"inline":false,"label":"Release","permalink":"/react-native-iap/blog/tags/release","description":"New version releases and updates"},{"inline":true,"label":"alternative-billing","permalink":"/react-native-iap/blog/tags/alternative-billing"},{"inline":false,"label":"iOS","permalink":"/react-native-iap/blog/tags/ios","description":"iOS platform specific features"},{"inline":false,"label":"Android","permalink":"/react-native-iap/blog/tags/android","description":"Android platform specific features"},{"inline":true,"label":"storekit","permalink":"/react-native-iap/blog/tags/storekit"},{"inline":true,"label":"google-play","permalink":"/react-native-iap/blog/tags/google-play"}],"readingTime":4.77,"hasTruncateMarker":true,"authors":[{"name":"Hyo","title":"React Native IAP Maintainer","url":"https://github.com/hyochan","page":{"permalink":"/react-native-iap/blog/authors/hyochan"},"socials":{"github":"https://github.com/hyochan","linkedin":"https://www.linkedin.com/in/hyochanjang/","x":"https://x.com/hyodotdev"},"imageURL":"https://github.com/hyochan.png","key":"hyochan"}],"frontMatter":{"slug":"release-14.4.12-alternative-billing","title":"14.4.12 - Alternative Billing Support","authors":["hyochan"],"tags":["release","alternative-billing","ios","android","storekit","google-play"],"description":"React Native IAP 14.4.12 introduces comprehensive alternative billing support for both iOS and Android, enabling external payment systems with reduced platform fees.","image":"https://github.com/hyochan/react-native-iap/raw/main/docs/static/img/logo.png","date":"2025-10-05T00:00:00.000Z"},"unlisted":false,"prevItem":{"title":"14.4.33 - Horizon OS Support","permalink":"/react-native-iap/blog/14.4.33"},"nextItem":{"title":"Release 14.4.12 - Alternative Billing Support","permalink":"/react-native-iap/blog/release-14.4.12"}},"content":"![React Native IAP Logo](https://github.com/hyochan/react-native-iap/raw/main/docs/static/img/logo.png)\\n\\n# React Native IAP 14.4.12 - Alternative Billing Support\\n\\nReact Native IAP 14.4.12 introduces comprehensive **alternative billing** support for both iOS and Android platforms, empowering developers to use external payment systems alongside or instead of platform billing\u2014unlocking reduced fees and greater monetization flexibility.\\n\\n\ud83d\udc49 [View the full release on GitHub](https://github.com/hyochan/react-native-iap/releases/tag/14.4.12)\\n\\n\x3c!-- truncate --\x3e\\n\\n## \ud83d\ude80 What\'s New\\n\\n### Alternative Billing for Android & iOS\\n\\n**Android** - Two modes supported:\\n\\n- **Alternative Billing Only**: Exclusive use of your payment system\\n- **User Choice Billing**: Users choose between Google Play or your payment system\\n- **Reduced Fees**: 4% service fee reduction when using alternative billing\\n- **Regional Availability**: South Korea, India, EEA\\n\\n**iOS** - External purchase links:\\n\\n- **External URLs**: Redirect users to your website for payment (iOS 16.0+)\\n- **Notice Sheets**: Required disclosure before external redirect (iOS 18.2+)\\n- **Reduced Commission**: 27% (vs. 30%) for year 1, 12% for subsequent years\\n- **Regional Availability**: US, EU, and approved countries\\n\\n## \ud83d\udcf1 New APIs\\n\\n### Android\\n\\n```tsx\\nimport {\\n  initConnection,\\n  checkAlternativeBillingAvailabilityAndroid,\\n  showAlternativeBillingDialogAndroid,\\n  createAlternativeBillingTokenAndroid,\\n  userChoiceBillingListenerAndroid,\\n} from \'react-native-iap\';\\n```\\n\\n**Core Methods:**\\n\\n- [`initConnection(config)`](/docs/api/methods/core-methods#initconnection) - Configure billing mode\\n- [`checkAlternativeBillingAvailabilityAndroid()`](/docs/api/methods/core-methods#checkalternativebillingavailabilityandroid) - Check availability\\n- [`showAlternativeBillingDialogAndroid()`](/docs/api/methods/core-methods#showalternativebillingdialogandroid) - Show information dialog\\n- [`createAlternativeBillingTokenAndroid()`](/docs/api/methods/core-methods#createalternativebillingtokenandroid) - Generate reporting token\\n\\n**Event Listener:**\\n\\n- [`userChoiceBillingListenerAndroid()`](/docs/api/methods/listeners#userchoicebillinglistenerandroid) - Listen for user billing choice\\n\\n### iOS\\n\\n```tsx\\nimport {\\n  canPresentExternalPurchaseNoticeIOS,\\n  presentExternalPurchaseNoticeSheetIOS,\\n  presentExternalPurchaseLinkIOS,\\n} from \'react-native-iap\';\\n```\\n\\n**Core Methods:**\\n\\n- [`canPresentExternalPurchaseNoticeIOS()`](/docs/api/methods/core-methods#canpresentexternalpurchasenoticeios) - Check notice availability (iOS 18.2+)\\n- [`presentExternalPurchaseNoticeSheetIOS()`](/docs/api/methods/core-methods#presentexternalpurchasenoticesheetios) - Show disclosure notice (iOS 18.2+)\\n- [`presentExternalPurchaseLinkIOS()`](/docs/api/methods/core-methods#presentexternalpurchaselinkios) - Open external link (iOS 16.0+)\\n\\n## \ud83d\udd27 Expo Config Plugin\\n\\nAutomatic iOS setup with zero manual configuration:\\n\\n```tsx\\n// app.config.ts\\nexport default {\\n  plugins: [\\n    [\\n      \'react-native-iap\',\\n      {\\n        iosAlternativeBilling: {\\n          countries: [\'kr\', \'nl\'], // ISO 3166-1 alpha-2 codes\\n          links: {\\n            kr: \'https://your-site.com/kr/checkout\',\\n            nl: \'https://your-site.com/nl/checkout\',\\n          },\\n          enableExternalPurchaseLink: true,\\n        },\\n      },\\n    ],\\n  ],\\n};\\n```\\n\\nThe plugin automatically adds:\\n\\n- \u2705 Required entitlements (`com.apple.developer.storekit.external-purchase*`)\\n- \u2705 Info.plist keys (`SKExternalPurchase`, `SKExternalPurchaseLink`, etc.)\\n- \u2705 URL validation and formatting\\n\\n**Advanced Configuration:**\\n\\n- `multiLinks` - Multiple URLs per country (iOS 17.5+, up to 5 for music apps)\\n- `customLinkRegions` - Custom link regions (iOS 18.1+)\\n- `streamingLinkRegions` - Music streaming regions (iOS 18.2+)\\n\\nSee [Expo Plugin Guide](/docs/guides/expo-plugin) for complete configuration options.\\n\\n## \ud83c\udfa8 useIAP Hook Integration\\n\\nAlternative billing is fully integrated into the `useIAP` hook:\\n\\n```tsx\\nimport {useIAP} from \'react-native-iap\';\\n\\nconst {connected} = useIAP({\\n  // Android billing mode\\n  alternativeBillingModeAndroid: \'user-choice\', // or \'alternative-only\'\\n\\n  // User choice event handler\\n  onUserChoiceBillingAndroid: (details) => {\\n    console.log(\'User selected alternative billing\');\\n    reportToBackend(details.externalTransactionToken);\\n  },\\n});\\n```\\n\\n## \ud83d\udcda Documentation & Examples\\n\\n### Comprehensive Guides\\n\\n- [**Alternative Billing Guide**](/docs/guides/alternative-billing) - Complete platform integration guide\\n- [**Alternative Billing Example**](/docs/examples/alternative-billing) - Code examples for both platforms\\n- [**API Reference**](/docs/api/methods/core-methods#alternative-billing-apis) - Full method documentation\\n- [**Type Definitions**](/docs/api/types) - TypeScript types and interfaces\\n\\n### Working Example App\\n\\nComplete alternative billing implementation in the example app:\\n\\n\ud83d\udccd **Location**: `example/screens/AlternativeBilling.tsx`\\n\\n**Features:**\\n\\n- \u2728 Platform-specific flows (iOS vs. Android)\\n- \ud83d\udd04 Android billing mode switcher (alternative-only \u2194 user-choice)\\n- \ud83d\udcf1 Real-time status and result display\\n- \ud83d\udcd6 Step-by-step compliance guidance\\n- \ud83d\udd17 Deep linking recommendations (iOS)\\n\\n**Run Example:**\\n\\n```bash\\ncd example\\nyarn ios    # or yarn android\\n# Navigate to \\"Alternative Billing\\" from home screen\\n```\\n\\nView source: [AlternativeBilling.tsx on GitHub](https://github.com/hyochan/react-native-iap/blob/main/example/screens/AlternativeBilling.tsx)\\n\\n## \ud83d\udd28 Technical Implementation\\n\\n### OpenIAP Upgrades\\n\\n- **openiap-apple** \u2192 v1.2.10 - StoreKit external purchase support\\n- **openiap-google** \u2192 v1.2.12 - Alternative billing APIs\\n- **openiap-gql** \u2192 v1.0.12 - Updated type definitions\\n\\n### Android Architecture\\n\\n- Native alternative billing API integration (Google Play Billing 7.0+)\\n- Automatic service reconnection handling\\n- Token creation and validation\\n- User choice event deduplication\\n\\n### iOS Architecture\\n\\n- StoreKit External Purchase API integration (iOS 16.0+)\\n- Notice sheet support (iOS 18.2+)\\n- Automatic entitlement management\\n- URL validation and sanitization\\n\\n### Type Safety\\n\\nFull TypeScript support with comprehensive types:\\n\\n```tsx\\ntype AlternativeBillingModeAndroid =\\n  | \'none\'\\n  | \'alternative-only\'\\n  | \'user-choice\';\\n\\ninterface UserChoiceBillingDetails {\\n  products: string[];\\n  externalTransactionToken: string;\\n}\\n\\ninterface ExternalPurchaseNoticeResultIOS {\\n  result: \'continue\' | \'cancel\';\\n}\\n\\ninterface ExternalPurchaseLinkResultIOS {\\n  success: boolean;\\n  error?: string;\\n}\\n```\\n\\n## \u26a0\ufe0f Platform Requirements\\n\\n### iOS\\n\\n- **Minimum Version**: iOS 16.0+ (external links), iOS 18.2+ (notice sheets)\\n- **App Store Connect**: External purchase entitlement approval required\\n- **Provisioning Profile**: Must include StoreKit external purchase entitlements\\n- **URL Requirements**: HTTPS only, no query parameters, \u22641,000 characters\\n\\n\ud83d\udcd6 [StoreKit External Purchase Documentation](https://developer.apple.com/documentation/storekit/external-purchase)\\n\\n### Android\\n\\n- **Google Play Console**: Alternative billing approval required\\n- **Token Reporting**: Tokens must be reported to Google within 24 hours\\n- **Backend**: Server-side token validation and reporting\\n- **Billing Library**: Google Play Billing 7.0+\\n\\n\ud83d\udcd6 [Google Play Alternative Billing Documentation](https://developer.android.com/google/play/billing/alternative)\\n\\n### Regional Availability\\n\\n| Platform    | Regions                                                    |\\n| ----------- | ---------------------------------------------------------- |\\n| **iOS**     | US, EU countries, and approved regions (varies by feature) |\\n| **Android** | South Korea, India, EEA (varies by app category)           |\\n\\n## \ud83d\udce6 Installation\\n\\n```bash\\nnpm install react-native-iap@14.4.12\\n# or\\nyarn add react-native-iap@14.4.12\\n# or\\nbun add react-native-iap@14.4.12\\n```\\n\\n**For Expo projects:**\\n\\n```bash\\nnpx expo prebuild --clean  # Apply config plugin changes\\n```\\n\\n**For React Native CLI:**\\n\\n```bash\\ncd ios && pod install  # Install iOS dependencies\\n```\\n\\n## \ud83d\udea8 Breaking Changes\\n\\n**None** - This release is fully backward compatible. All changes are additive.\\n\\n## \ud83d\ude4f Acknowledgments\\n\\nThis release builds on the alternative billing implementation from [expo-iap](https://github.com/hyochan/expo-iap), bringing the same powerful features to React Native CLI projects.\\n\\nSpecial thanks to:\\n\\n- **OpenIAP** team for cross-platform alternative billing support\\n- Community contributors for testing and feedback\\n\\n## \ud83d\udd17 Additional Resources\\n\\n- **OpenIAP Alternative Billing**: [openiap.dev/docs/alternative-billing](https://www.openiap.dev/docs/alternative-billing)\\n- **Apple External Purchase**: [developer.apple.com/storekit/external-purchase](https://developer.apple.com/documentation/storekit/external-purchase)\\n- **Google Alternative Billing**: [developer.android.com/google/play/billing/alternative](https://developer.android.com/google/play/billing/alternative)\\n- **User Choice Billing (Android)**: [support.google.com/googleplay/android-developer/answer/13821247](https://support.google.com/googleplay/android-developer/answer/13821247)\\n\\n## \ud83d\udcac Feedback\\n\\nQuestions or issues? Let us know via [GitHub Issues](https://github.com/hyochan/react-native-iap/issues).\\n\\nTry out alternative billing in 14.4.12 and share your experience! \ud83c\udf89"},{"id":"release-14.4.12","metadata":{"permalink":"/react-native-iap/blog/release-14.4.12","editUrl":"https://github.com/hyochan/react-native-iap/tree/main/docs/blog/2025-10-04-release-14.4.12.md","source":"@site/blog/2025-10-04-release-14.4.12.md","title":"Release 14.4.12 - Alternative Billing Support","description":"React Native IAP 14.4.12 adds comprehensive alternative billing support for both Android and iOS, enabling external payment systems alongside platform billing.","date":"2025-10-04T00:00:00.000Z","tags":[{"inline":false,"label":"Release","permalink":"/react-native-iap/blog/tags/release","description":"New version releases and updates"},{"inline":true,"label":"alternative-billing","permalink":"/react-native-iap/blog/tags/alternative-billing"},{"inline":true,"label":"google-play","permalink":"/react-native-iap/blog/tags/google-play"},{"inline":true,"label":"storekit","permalink":"/react-native-iap/blog/tags/storekit"}],"readingTime":4.49,"hasTruncateMarker":true,"authors":[{"name":"Hyo","title":"React Native IAP Maintainer","url":"https://github.com/hyochan","page":{"permalink":"/react-native-iap/blog/authors/hyochan"},"socials":{"github":"https://github.com/hyochan","linkedin":"https://www.linkedin.com/in/hyochanjang/","x":"https://x.com/hyodotdev"},"imageURL":"https://github.com/hyochan.png","key":"hyochan"}],"frontMatter":{"slug":"release-14.4.12","title":"Release 14.4.12 - Alternative Billing Support","authors":["hyochan"],"tags":["release","alternative-billing","google-play","storekit"],"description":"React Native IAP 14.4.12 adds comprehensive alternative billing support for both Android and iOS, enabling external payment systems alongside platform billing.","image":"https://github.com/hyochan/react-native-iap/raw/main/docs/static/img/logo.png"},"unlisted":false,"prevItem":{"title":"14.4.12 - Alternative Billing Support","permalink":"/react-native-iap/blog/release-14.4.12-alternative-billing"},"nextItem":{"title":"Release 14.4.0 - Full OpenIAP Ecosystem Adoption","permalink":"/react-native-iap/blog/release-14.4.0"}},"content":"![React Native IAP Logo](https://github.com/hyochan/react-native-iap/raw/main/docs/static/img/logo.png)\\n\\n# React Native IAP 14.4.12\\n\\nReact Native IAP 14.4.12 introduces comprehensive **alternative billing** support for both iOS and Android, empowering developers to use external payment systems alongside or instead of App Store and Google Play billing. This enables reduced platform fees and greater flexibility in monetization strategies while maintaining compliance with platform policies.\\n\\n## \ud83d\ude80 What\'s New\\n\\n### Alternative Billing APIs\\n\\nThis release adds full alternative billing functionality for both platforms:\\n\\n#### Android\\n\\n- **Alternative Billing Only Mode**: Exclusive use of your payment system\\n- **User Choice Billing Mode**: Users choose between Google Play and your payment system\\n- Three-step flow: check availability \u2192 show dialog \u2192 create reporting token\\n- Automatic token generation for Google Play reporting (required within 24 hours)\\n- Reduced service fees (4% reduction when using alternative billing)\\n\\n#### iOS\\n\\n- **External Purchase Links**: Redirect users to your external website (iOS 16.0+)\\n- **Purchase Notice Sheets**: Required disclosure before external redirects (iOS 18.2+)\\n- Expo config plugin support for automatic entitlement and Info.plist setup\\n- Support for multiple URLs per country (up to 5 for music streaming apps)\\n- Custom link regions and streaming-specific configurations\\n\\n### New APIs\\n\\n#### Android Alternative Billing\\n\\n```tsx\\nimport {\\n  initConnection,\\n  checkAlternativeBillingAvailabilityAndroid,\\n  showAlternativeBillingDialogAndroid,\\n  createAlternativeBillingTokenAndroid,\\n  userChoiceBillingListenerAndroid,\\n} from \'react-native-iap\';\\n\\n// Initialize with alternative billing mode\\nawait initConnection({\\n  alternativeBillingModeAndroid: \'alternative-only\', // or \'user-choice\'\\n});\\n\\n// 3-step alternative billing flow\\nconst isAvailable = await checkAlternativeBillingAvailabilityAndroid();\\nconst userAccepted = await showAlternativeBillingDialogAndroid();\\nconst token = await createAlternativeBillingTokenAndroid(productId);\\n\\n// User choice billing event listener\\nconst subscription = userChoiceBillingListenerAndroid((details) => {\\n  console.log(\'User selected alternative billing\');\\n  // Report to backend for Google Play compliance\\n});\\n```\\n\\n#### iOS External Purchase\\n\\n```tsx\\nimport {\\n  canPresentExternalPurchaseNoticeIOS,\\n  presentExternalPurchaseNoticeSheetIOS,\\n  presentExternalPurchaseLinkIOS,\\n} from \'react-native-iap\';\\n\\n// Check availability (iOS 18.2+)\\nconst canPresent = await canPresentExternalPurchaseNoticeIOS();\\n\\n// Present notice sheet before external link\\nconst noticeResult = await presentExternalPurchaseNoticeSheetIOS();\\n\\nif (noticeResult.result === \'continue\') {\\n  // Redirect to external purchase URL\\n  const result = await presentExternalPurchaseLinkIOS(\\n    \'https://your-website.com/purchase\',\\n  );\\n}\\n```\\n\\n### Expo Config Plugin Enhancement\\n\\nAutomatic iOS alternative billing configuration:\\n\\n```tsx\\n// app.config.ts\\nexport default {\\n  plugins: [\\n    [\\n      \'react-native-iap\',\\n      {\\n        iosAlternativeBilling: {\\n          // Required: Countries (ISO 3166-1 alpha-2)\\n          countries: [\'kr\', \'nl\', \'de\', \'fr\'],\\n\\n          // Optional: External URLs per country\\n          links: {\\n            kr: \'https://your-site.com/kr/checkout\',\\n            nl: \'https://your-site.com/nl/checkout\',\\n          },\\n\\n          // Optional: Multiple URLs (iOS 17.5+, up to 5)\\n          multiLinks: {\\n            de: [\\n              \'https://your-site.com/de/checkout\',\\n              \'https://your-site.com/de/offer\',\\n            ],\\n          },\\n\\n          // Optional: Custom regions (iOS 18.1+)\\n          customLinkRegions: [\'de\', \'fr\', \'nl\'],\\n\\n          // Optional: Streaming regions (iOS 18.2+, music apps)\\n          streamingLinkRegions: [\'at\', \'de\', \'fr\', \'nl\'],\\n\\n          // Enable entitlements\\n          enableExternalPurchaseLink: true,\\n          enableExternalPurchaseLinkStreaming: false, // music apps only\\n        },\\n      },\\n    ],\\n  ],\\n};\\n```\\n\\nThe config plugin automatically adds:\\n\\n- Required entitlements (`com.apple.developer.storekit.external-purchase`, etc.)\\n- Info.plist configuration (`SKExternalPurchase`, `SKExternalPurchaseLink`, etc.)\\n- Proper URL validation and country code formatting\\n\\n### useIAP Hook Integration\\n\\nAlternative billing is fully integrated into the `useIAP` hook:\\n\\n```tsx\\nimport {useIAP} from \'react-native-iap\';\\n\\nconst {\\n  checkAlternativeBillingAvailabilityAndroid,\\n  showAlternativeBillingDialogAndroid,\\n  createAlternativeBillingTokenAndroid,\\n} = useIAP({\\n  // Android alternative billing configuration\\n  alternativeBillingModeAndroid: \'alternative-only\',\\n\\n  // User choice billing event handler\\n  onUserChoiceBillingAndroid: (details) => {\\n    console.log(\'User selected alternative billing\');\\n    reportToBackend(details.externalTransactionToken);\\n  },\\n});\\n```\\n\\n### Example App\\n\\nA complete alternative billing example is now included in the example app:\\n\\n#### Features\\n\\n- Platform-specific flows (iOS external URLs vs. Android billing modes)\\n- Billing mode switcher for Android (alternative-only vs. user-choice)\\n- Real-time status updates and result display\\n- Step-by-step guidance for compliance requirements\\n- Deep linking recommendations for iOS\\n\\n#### Access\\n\\nRun the example app and navigate to \\"Alternative Billing\\" from the home screen.\\n\\n## \ud83d\udd27 Technical Details\\n\\n### Android Implementation\\n\\n- Uses OpenIAP Google v1.2.12 with native alternative billing support\\n- Auto-reconnection handling for billing service state\\n- Proper token creation and reporting flow\\n- User choice billing listener with event deduplication\\n\\n### iOS Implementation\\n\\n- Leverages StoreKit External Purchase APIs (iOS 16.0+)\\n- Support for new notice sheets (iOS 18.2+)\\n- Proper entitlement management via config plugin\\n- URL validation and country code handling\\n\\n### Type Safety\\n\\nAll alternative billing APIs are fully typed with TypeScript:\\n\\n- `AlternativeBillingModeAndroid`: `\'none\'` | `\'alternative-only\'` | `\'user-choice\'`\\n- `UserChoiceBillingDetails`: Product list and external transaction token\\n- `ExternalPurchaseNoticeResultIOS`: Notice sheet result with action\\n- `ExternalPurchaseLinkResultIOS`: External link presentation result\\n\\n## \ud83d\udcd6 Documentation\\n\\nComprehensive documentation added:\\n\\n- **API Reference**: Complete method signatures and examples in [Core Methods](/docs/api/methods/core-methods#alternative-billing-apis)\\n- **Type Definitions**: All alternative billing types in [Types](/docs/api/types)\\n- **Expo Plugin Guide**: Configuration examples and requirements\\n- **Example App**: Working implementation for both platforms\\n\\n## \u26a0\ufe0f Important Notes\\n\\n### Platform Approval Required\\n\\nBoth platforms require special approval to use alternative billing:\\n\\n- **iOS**: External purchase entitlement approval from Apple\\n- **Android**: Alternative billing approval in Google Play Console\\n\\n### Compliance Requirements\\n\\n- **iOS**: URLs must use HTTPS, no query parameters, \u22641,000 characters\\n- **Android**: External transaction tokens must be reported within 24 hours\\n- **Fees**: Reduced platform fees apply (varies by platform and region)\\n\\n### Supported Regions\\n\\n- **iOS**: US, EU, and approved countries (varies by feature)\\n- **Android**: South Korea, India, EEA (varies by app type)\\n\\n## \ud83d\udce6 Installation\\n\\n```bash\\nnpm install react-native-iap@14.4.12\\n# or\\nyarn add react-native-iap@14.4.12\\n# or\\nbun add react-native-iap@14.4.12\\n```\\n\\nFor Expo projects, run `npx expo prebuild` after updating your config plugin.\\n\\n## \ud83d\udd17 References\\n\\n- **OpenIAP Alternative Billing**: [openiap.dev/docs/alternative-billing](https://www.openiap.dev/docs/alternative-billing)\\n- **Apple External Purchase**: [developer.apple.com/storekit/external-purchase](https://developer.apple.com/documentation/storekit/external-purchase)\\n- **Google Alternative Billing**: [developer.android.com/google/play/billing/alternative](https://developer.android.com/google/play/billing/alternative)\\n- **OpenIAP Apple**: v1.2.10 with external purchase support\\n- **OpenIAP Google**: v1.2.12 with alternative billing APIs\\n\\n## \ud83d\ude4f Acknowledgments\\n\\nThis release builds on the alternative billing implementation from [expo-iap](https://github.com/hyochan/expo-iap), bringing the same powerful features to React Native CLI projects.\\n\\n---\\n\\nTry out alternative billing in 14.4.12 and let us know your feedback via [GitHub issues](https://github.com/hyochan/react-native-iap/issues)!\\n\\n\x3c!-- truncate --\x3e"},{"id":"release-14.4.0","metadata":{"permalink":"/react-native-iap/blog/release-14.4.0","editUrl":"https://github.com/hyochan/react-native-iap/tree/main/docs/blog/2025-09-22-release-14.4.0.md","source":"@site/blog/2025-09-22-release-14.4.0.md","title":"Release 14.4.0 - Full OpenIAP Ecosystem Adoption","description":"React Native IAP 14.4.0 graduates into the full OpenIAP ecosystem with unified native stacks, improved error handling, and streamlined purchase flows.","date":"2025-09-22T00:00:00.000Z","tags":[{"inline":false,"label":"Release","permalink":"/react-native-iap/blog/tags/release","description":"New version releases and updates"}],"readingTime":2.64,"hasTruncateMarker":true,"authors":[{"name":"Hyo","title":"React Native IAP Maintainer","url":"https://github.com/hyochan","page":{"permalink":"/react-native-iap/blog/authors/hyochan"},"socials":{"github":"https://github.com/hyochan","linkedin":"https://www.linkedin.com/in/hyochanjang/","x":"https://x.com/hyodotdev"},"imageURL":"https://github.com/hyochan.png","key":"hyochan"}],"frontMatter":{"slug":"release-14.4.0","title":"Release 14.4.0 - Full OpenIAP Ecosystem Adoption","authors":["hyochan"],"tags":["release"],"description":"React Native IAP 14.4.0 graduates into the full OpenIAP ecosystem with unified native stacks, improved error handling, and streamlined purchase flows.","image":"https://github.com/hyochan/react-native-iap/raw/main/docs/static/img/logo.png"},"unlisted":false,"prevItem":{"title":"Release 14.4.12 - Alternative Billing Support","permalink":"/react-native-iap/blog/release-14.4.12"},"nextItem":{"title":"Release 14.3.0","permalink":"/react-native-iap/blog/2025/09/13/release-14.3.0"}},"content":"![React Native IAP Logo](https://github.com/hyochan/react-native-iap/raw/main/docs/static/img/logo.png)\\n\\n# React Native IAP 14.4.0\\n\\nReact Native IAP 14.4.0 graduates the project into the full OpenIAP ecosystem. The release ships with three dedicated native stacks:\\n\\n- [**openiap-apple**](https://github.com/openiap/apple) \u2014 StoreKit 2 implementation for Apple platforms\\n- [**openiap-google**](https://github.com/openiap/google) \u2014 Google Play Billing integration for Android\\n- [**openiap-gql**](https://github.com/openiap/gql) \u2014 GraphQL helpers that drive types and tooling\\n\\nFrom 14.4.0 onward, React Native IAP stays in lockstep with these modules: Apple v1.2.2, Google v1.2.6, and GQL v1.0.8. That shared version alignment gives React Native IAP stable native compatibility and a unified type system straight from the OpenIAP schema.\\n\\n## \ud83d\ude80 Highlights\\n\\n- Adopted the full OpenIAP core stack\u2014**openiap-gql**, **openiap-apple v1.2.2**, and **openiap-google v1.2.6**\u2014bringing React Native IAP into alignment with the shared ecosystem used across Flutter, React Native, and KMP.\\n- Trimmed roughly **two thirds** of our custom native bridge code by delegating logic to the OpenIAP modules.\\n- Expanded automated coverage to about **98%**, spanning purchase flows, native bridge entry points, and error mapping utilities.\\n\\n## \ud83d\udd01 OpenIAP Upgrades\\n\\n- Normalized purchase payloads on both platforms so every bridge call sanitizes platform casing and forwards the complete OpenIAP record.\\n- Migrated Android to the new RequestPurchaseProps / PurchaseResult / ErrorCode contracts, achieving parity with the Apple module.\\n- Centralized native dependency versions via [`openiap-versions.json`](https://github.com/hyochan/react-native-iap/blob/main/openiap-versions.json); Gradle now fails fast if the Google artifact version is missing and scripts/migrations read from one source of truth.\\n\\n## \ud83d\udc1e Bug Fixes\\n\\n- **fix(android)**: honor subscription offerToken ([#214](https://github.com/hyochan/react-native-iap/pull/214)) restores proper handling of `subscriptionOfferDetailsAndroid` so Google Play discounts apply reliably.\\n\\n## \ud83d\udee1\ufe0f Safer Purchases & Better Errors\\n\\n- `requestPurchase` on iOS explicitly rejects unsupported product types instead of silently treating all as in-app.\\n- Error handling now consistently routes through the shared ErrorCode table so promise rejections, platform conversions, and predicates remain aligned.\\n\\n## \ud83d\udee0\ufe0f Tooling & Workflow\\n\\n- Contributor docs clarify how to bump OpenIAP packages, regenerate types, and keep `openiap-versions.json` synchronized for Android and iOS builds.\\n\\n## \u26a0\ufe0f Important Changes\\n\\n- **Transaction identifiers**: `transactionId` is reinstated as the primary store reference (`orderId` on Android, StoreKit transaction ID on iOS). Android\'s generic `id` is no longer repurposed for orders; when Google Play omits an `orderId` (typical for consumables), `transactionId` becomes `null` and clients should rely on the unified `purchaseToken` (Android purchase token / iOS JWS). This value is the canonical receipt for server validation.\\n- **iOS request types**: purchase requests must specify either `in-app` or `subs`. Passing `all` (or any other type) throws an explicit error.\\n- **Promoted products**: events now emit the full sanitized product payload; downstream listeners should expect the entire object instead of just `productId`.\\n\\n## \ud83d\udce6 Installation\\n\\n```bash\\nnpm install react-native-iap@14.4.0\\n# or\\nyarn add react-native-iap@14.4.0\\n# or\\nbun add react-native-iap@14.4.0\\n```\\n\\n## \ud83d\udd17 References\\n\\n- Recent work: [Closed pull requests](https://github.com/hyochan/react-native-iap/pulls?q=is%3Apr+is%3Aclosed)\\n- Release builds on the OpenIAP ecosystem: [openiap.dev](https://openiap.dev)\\n\\nEnjoy the smoother upgrade path and richer diagnostics shipped in 14.4.0! Let us know how it goes via [GitHub issues](https://github.com/hyochan/react-native-iap/issues).\\n\\n---\\n\\n\x3c!-- truncate --\x3e"},{"id":"/2025/09/13/release-14.3.0","metadata":{"permalink":"/react-native-iap/blog/2025/09/13/release-14.3.0","editUrl":"https://github.com/hyochan/react-native-iap/tree/main/docs/blog/2025-09-13-release-14.3.0.md","source":"@site/blog/2025-09-13-release-14.3.0.md","title":"Release 14.3.0","description":"This release consolidates the 14.3.x patch series with comprehensive improvements across Android, iOS, documentation, examples, and ecosystem alignment.","date":"2025-09-13T00:00:00.000Z","tags":[{"inline":false,"label":"Release","permalink":"/react-native-iap/blog/tags/release","description":"New version releases and updates"},{"inline":false,"label":"Android","permalink":"/react-native-iap/blog/tags/android","description":"Android platform specific features"},{"inline":false,"label":"iOS","permalink":"/react-native-iap/blog/tags/ios","description":"iOS platform specific features"},{"inline":false,"label":"Plugin","permalink":"/react-native-iap/blog/tags/plugin","description":"Plugin updates and features"},{"inline":false,"label":"Documentation","permalink":"/react-native-iap/blog/tags/docs","description":"Documentation updates and improvements"},{"inline":false,"label":"Examples","permalink":"/react-native-iap/blog/tags/examples","description":"Code examples and samples"},{"inline":false,"label":"Hook","permalink":"/react-native-iap/blog/tags/hook","description":"React hooks updates"},{"inline":false,"label":"Breaking","permalink":"/react-native-iap/blog/tags/breaking","description":"Breaking changes"}],"readingTime":2.42,"hasTruncateMarker":true,"authors":[{"name":"Hyo","title":"React Native IAP Maintainer","url":"https://github.com/hyochan","page":{"permalink":"/react-native-iap/blog/authors/hyochan"},"socials":{"github":"https://github.com/hyochan","linkedin":"https://www.linkedin.com/in/hyochanjang/","x":"https://x.com/hyodotdev"},"imageURL":"https://github.com/hyochan.png","key":"hyochan"}],"frontMatter":{"title":"Release 14.3.0","authors":["hyochan"],"tags":["release","android","ios","plugin","docs","examples","hook","breaking"],"date":"2025-09-13T00:00:00.000Z"},"unlisted":false,"prevItem":{"title":"Release 14.4.0 - Full OpenIAP Ecosystem Adoption","permalink":"/react-native-iap/blog/release-14.4.0"},"nextItem":{"title":"Release 14.2.0","permalink":"/react-native-iap/blog/2025/09/10/release-14.2.0"}},"content":"\x3c!-- truncate --\x3e\\n\\nThis release consolidates the 14.3.x patch series with comprehensive improvements across Android, iOS, documentation, examples, and ecosystem alignment.\\n\\n## Breaking Changes \u26a1\ufe0f\\n\\n`useIAP` now expects callers to lean on the supplied callbacks instead of the temporary `currentPurchase` helpers.\\n\\n## Added\\n\\n- `getStorefront()`: returns the current storefront country code.\\n- `deepLinkToSubscriptions()`: opens the native subscription management UI (Android/iOS).\\n- Examples: \\"Manage Subscriptions\\" buttons in SubscriptionFlow and AvailablePurchases (opens native subscription management cross\u2011platform)\\n- Examples: Tap a purchased item to open a details modal\\n\\n## Changed\\n\\n### Android & iOS Platform Updates\\n\\n- Android: migrate to OpenIAP Google 1.1.0; align init and field mapping with spec.\\n- Upgrade the fallback/config plugin to [openiap-google 1.1.10](https://github.com/hyodotdev/openiap-google/releases/tag/1.1.10) so Android builds pick up the latest Billing configuration fixes.\\n- Bump the iOS pod to [openiap 1.1.12](https://github.com/hyochan/react-native-iap/releases/tag/1.1.12) and switch native error codes to PascalCase to match the shared TypeScript surface.\\n\\n### JavaScript & Bridge Improvements\\n\\n- JS: Treat `requestPurchase`/`requestSubscription` separately, warn in development when the wrong payload is supplied, and drop the legacy `request` fallback.\\n- JS: Normalize native error codes (including the Android \\"canceled\\" spelling) and keep init connection failures suppressed until the store is ready.\\n- Bridge: Warn when the iOS product type is unrecognized and align Active Subscription expiration fields with the generated schema.\\n- Removed the `currentPurchase` / `currentPurchaseError` state from `useIAP` and route purchase outcomes through `onPurchaseSuccess` / `onPurchaseError`.\\n- Trimmed the duplicate-event guard and logs so the hook focuses on forwarding results and refreshing subscription snapshots.\\n\\n### Documentation & Examples\\n\\n- Docs: Clarify event\u2011driven purchase model (requests don\'t resolve with results); add FAQ about transient iOS success\u2192error timing and simple debounce guidance\\n- Docs/Examples: Prefer `purchase.id`; continue using `purchaseToken` for server validation\\n- Examples: Redact sensitive fields in logs and modals (no raw `transactionReceipt` or full `purchaseToken`)\\n- Docs: Restore installation note and remove a local Docusaurus type shim to avoid duplicate identifiers.\\n\\n### Nitro & Plugin Enhancements\\n\\n- Plugin: Re\u2011add opt\u2011in `\\"with-folly-no-couroutines\\": true` to inject Folly defines in the Podfile.\\n- GraphQL: Bump to [openiap-gql 1.0.0](https://github.com/hyodotdev/openiap-gql/releases/tag/1.0.0) so the generated schema stays in sync with the published contract.\\n\\n## Fixed\\n\\n- Android: address a potential `init` race and improve error propagation.\\n- iOS: add temporary stubs to keep Nitro/iOS aligned with the JS spec.\\n- iOS: Sanitize purchase error payload so product identifiers don\'t appear in `purchaseToken` on error events; keep internal de\u2011duplication by SKU\\n- Examples/Tests: Align transaction row with `purchase.id` and update tests\\n- Fix: Guard HybridObject creation and drop `isRuntimeAlive` usage to prevent CI/Jest issues.\\n- Restore the explicit `Failed to initialize connection` message when Play Billing rejects `initConnection()` so logs stay actionable.\\n- Keep receipt validation failures tagged with a helpful prefix even when the underlying exception omits a message.\\n- Drop the purchase token from acknowledge/consume error payloads to avoid leaking identifiers in client logs.\\n\\nNo breaking changes. Compatible with 14.3.x line."},{"id":"/2025/09/10/release-14.2.0","metadata":{"permalink":"/react-native-iap/blog/2025/09/10/release-14.2.0","editUrl":"https://github.com/hyochan/react-native-iap/tree/main/docs/blog/2025-09-10-release-14.2.0.md","source":"@site/blog/2025-09-10-release-14.2.0.md","title":"Release 14.2.0","description":"React Native IAP 14.2.0 focuses on stability and smoother integration across iOS and Android.","date":"2025-09-10T00:00:00.000Z","tags":[{"inline":false,"label":"Release","permalink":"/react-native-iap/blog/tags/release","description":"New version releases and updates"},{"inline":false,"label":"iOS","permalink":"/react-native-iap/blog/tags/ios","description":"iOS platform specific features"},{"inline":false,"label":"Android","permalink":"/react-native-iap/blog/tags/android","description":"Android platform specific features"},{"inline":false,"label":"Nitro","permalink":"/react-native-iap/blog/tags/nitro","description":"Nitro Modules architecture updates"}],"readingTime":1.18,"hasTruncateMarker":true,"authors":[{"name":"Hyo","title":"React Native IAP Maintainer","url":"https://github.com/hyochan","page":{"permalink":"/react-native-iap/blog/authors/hyochan"},"socials":{"github":"https://github.com/hyochan","linkedin":"https://www.linkedin.com/in/hyochanjang/","x":"https://x.com/hyodotdev"},"imageURL":"https://github.com/hyochan.png","key":"hyochan"}],"frontMatter":{"title":"Release 14.2.0","authors":["hyochan"],"tags":["release","ios","android","nitro"],"date":"2025-09-10T00:00:00.000Z"},"unlisted":false,"prevItem":{"title":"Release 14.3.0","permalink":"/react-native-iap/blog/2025/09/13/release-14.3.0"},"nextItem":{"title":"Release 14.1.0 - Type System Improvements & API Enhancements","permalink":"/react-native-iap/blog/release-14-1-0"}},"content":"\x3c!-- truncate --\x3e\\n\\nReact Native IAP 14.2.0 focuses on stability and smoother integration across iOS and Android.\\n\\n## Highlights\\n\\n- iOS: Idempotent, non-blocking `initConnection()` with proper failure propagation. Prevents false-positive connected states under rapid navigation.\\n- iOS: Upgraded OpenIAP to `~> 1.1.8` for StoreKit 2 stability.\\n- iOS: Upgraded OpenIAP to `~> 1.1.9` ([notes](https://github.com/hyodotdev/openiap-apple/releases/tag/1.1.9))\\n- iOS: Event\u2011only purchase flow with error de\u2011duplication (no double cancel popups)\\n- Android: Ship consumer R8 keep rules so Nitro `HybridObjects` aren\u2019t stripped in release builds. Apps no longer need manual keeps.\\n- CI: Use vendored Yarn binary to avoid Corepack network/503 issues.\\n- Examples: Stabilized Subscription/Purchase flows and improved tests.\\n- Examples: Guard `finishTransaction` until connected; short delayed retry for reliability\\n\\n## Details\\n\\n- `ios/HybridRnIap.swift`: `initConnection()` now awaits OpenIAP initialization and returns the actual result. Errors surface through the purchase error channel with `E_INIT_CONNECTION` and the hook no longer marks as connected prematurely.\\n- `NitroIap.podspec`: Depends on `openiap` `~> 1.1.8`.\\n- `android/consumer-rules.pro`: Keep rules for Nitro IAP classes; wired via `consumerProguardFiles` so downstream apps inherit them automatically.\\n- CI workflows updated to call `.yarn/releases/yarn-3.6.1.cjs` directly.\\n\\n## Upgrade Notes\\n\\nNo breaking API changes. After upgrading:\\n\\n1. Reinstall Pods for the iOS example/app\\n\\n   ```bash\\n   cd example/ios && pod install\\n   ```\\n\\n2. Regenerate Nitrogen if you edited specs\\n\\n   ```bash\\n   yarn nitrogen\\n   ```\\n\\n3. Android consumers can remove any app-local keep rules previously added for Nitro IAP (the library now ships consumer rules)."},{"id":"release-14-1-0","metadata":{"permalink":"/react-native-iap/blog/release-14-1-0","editUrl":"https://github.com/hyochan/react-native-iap/tree/main/docs/blog/2025-09-06-release-14.1.0.md","source":"@site/blog/2025-09-06-release-14.1.0.md","title":"Release 14.1.0 - Type System Improvements & API Enhancements","description":"We\'re excited to announce React Native IAP 14.1.0 with significant type system improvements and API enhancements! \ud83d\ude80","date":"2025-09-06T00:00:00.000Z","tags":[{"inline":false,"label":"Release","permalink":"/react-native-iap/blog/tags/release","description":"New version releases and updates"},{"inline":false,"label":"React Native IAP","permalink":"/react-native-iap/blog/tags/","description":"In-app purchase library for Expo and React Native"},{"inline":false,"label":"Types","permalink":"/react-native-iap/blog/tags/types","description":"TypeScript type definitions and improvements"},{"inline":false,"label":"API","permalink":"/react-native-iap/blog/tags/api","description":"API updates and changes"}],"readingTime":2.67,"hasTruncateMarker":true,"authors":[{"name":"Hyo","title":"React Native IAP Maintainer","url":"https://github.com/hyochan","page":{"permalink":"/react-native-iap/blog/authors/hyochan"},"socials":{"github":"https://github.com/hyochan","linkedin":"https://www.linkedin.com/in/hyochanjang/","x":"https://x.com/hyodotdev"},"imageURL":"https://github.com/hyochan.png","key":"hyochan"}],"frontMatter":{"slug":"release-14-1-0","title":"Release 14.1.0 - Type System Improvements & API Enhancements","authors":["hyochan"],"tags":["release","react-native-iap","types","api"],"date":"2025-09-06T00:00:00.000Z"},"unlisted":false,"prevItem":{"title":"Release 14.2.0","permalink":"/react-native-iap/blog/2025/09/10/release-14.2.0"},"nextItem":{"title":"Release 14.0.0 - Expo Plugin Fixes","permalink":"/react-native-iap/blog/release-14-0-0"}},"content":"We\'re excited to announce React Native IAP 14.1.0 with significant type system improvements and API enhancements! \ud83d\ude80\\n\\n\u26a0\ufe0f **Note: This release contains breaking changes. Please review the migration guide carefully.**\\n\\n\x3c!-- truncate --\x3e\\n\\n## \u26a0\ufe0f Breaking Changes\\n\\n### 1. Platform-Specific Field Naming\\n\\nAll platform-specific fields now have platform suffixes for clarity.\\n\\n### 2. API Method Changes\\n\\n- `showManageSubscriptionsIOS()` return type changed from `Promise<boolean>` to `Promise<NitroPurchase[]>`\\n- `validateReceipt()` method signature has been updated\\n\\n### 3. Type System Updates\\n\\nSeveral type definitions have been restructured for better type safety.\\n\\n## What\'s New in v14.1.0\\n\\n### \ud83c\udfaf Enhanced Type System\\n\\n#### Platform-Specific Field Naming Convention\\n\\nAll platform-specific fields now follow a consistent naming pattern with platform suffixes:\\n\\n**iOS fields now end with `IOS`:**\\n\\n- `isFamilyShareable` \u2192 `isFamilyShareableIOS`\\n- `jsonRepresentation` \u2192 `jsonRepresentationIOS`\\n- New: `typeIOS` for detailed iOS product types\\n\\n**Android fields now end with `Android`:**\\n\\n- `originalPrice` \u2192 `originalPriceAndroid`\\n- `introductoryPriceValue` \u2192 `introductoryPriceValueAndroid`\\n- `subscriptionPeriod` \u2192 `subscriptionPeriodAndroid`\\n\\nThis change makes it immediately clear which fields are platform-specific, improving code maintainability and reducing confusion.\\n\\n### \ud83d\udd04 Common Purchase Fields\\n\\nAdded new common fields to the `PurchaseCommon` type for better cross-platform consistency:\\n\\n- `quantity: number` - Purchase quantity (defaults to 1)\\n- `purchaseState: PurchaseState` - Unified purchase state across platforms\\n- `isAutoRenewing: boolean` - Auto-renewal status for subscriptions\\n\\n### \ud83d\udcf1 iOS Product Types\\n\\nIntroduced `ProductTypeIOS` enum for more granular iOS product categorization:\\n\\n```typescript\\nenum ProductTypeIOS {\\n  consumable = \'consumable\',\\n  nonConsumable = \'nonConsumable\',\\n  autoRenewableSubscription = \'autoRenewableSubscription\',\\n  nonRenewingSubscription = \'nonRenewingSubscription\',\\n}\\n```\\n\\n### \ud83d\udd04 Purchase States\\n\\nNew unified `PurchaseState` enum for consistent purchase status handling:\\n\\n```typescript\\nenum PurchaseState {\\n  pending = \'pending\', // Android: waiting for payment confirmation\\n  purchased = \'purchased\', // Both: successfully purchased\\n  failed = \'failed\', // Both: purchase failed/revoked\\n  restored = \'restored\', // iOS only: restored from previous purchase\\n  deferred = \'deferred\', // iOS only: waiting for parental approval\\n  unknown = \'unknown\', // Both: unspecified state\\n}\\n```\\n\\n**Platform Notes:**\\n\\n- **iOS**: StoreKit 2 primarily uses `purchased` state for verified transactions. `restored` and `deferred` states are handled through separate flows.\\n- **Android**: Supports `pending` (awaiting payment), `purchased` (completed), and `unknown` (unspecified) states directly from the Play Billing Library.\\n\\n### \ud83d\udccb API Method Updates\\n\\n#### showManageSubscriptionsIOS()\\n\\nThe `showManageSubscriptionsIOS()` method now returns updated subscription information:\\n\\n```typescript\\n// Before: Promise<boolean>\\n// Now: Promise<NitroPurchase[]>\\nconst updatedSubscriptions = await showManageSubscriptionsIOS();\\n```\\n\\nThis allows you to get real-time subscription status updates after users modify their subscriptions.\\n\\n## Migration Guide\\n\\n### Updating Type References\\n\\nIf you\'re accessing platform-specific fields, update your code:\\n\\n```typescript\\n// Before\\nif (product.isFamilyShareable) {\\n}\\nif (product.originalPrice) {\\n}\\n\\n// After\\nif (product.isFamilyShareableIOS) {\\n}\\nif (product.originalPriceAndroid) {\\n}\\n```\\n\\n### Using New Purchase States\\n\\n```typescript\\nimport {PurchaseState} from \'react-native-iap\';\\n\\nif (purchase.purchaseState === PurchaseState.purchased) {\\n  // Handle successful purchase\\n} else if (purchase.purchaseState === PurchaseState.pending) {\\n  // Handle pending purchase\\n}\\n```\\n\\n### Handling showManageSubscriptionsIOS Response\\n\\n```typescript\\n// Before\\nconst success = await showManageSubscriptionsIOS();\\nif (success) {\\n  // Refresh subscriptions manually\\n}\\n\\n// After\\nconst updatedSubscriptions = await showManageSubscriptionsIOS();\\n// Use the returned subscription data directly\\nupdatedSubscriptions.forEach((sub) => {\\n  console.log(\'Updated subscription:\', sub.productId, sub.isAutoRenewing);\\n});\\n```\\n\\n## Benefits\\n\\n### \u2705 Improved Type Safety\\n\\nPlatform-specific fields are now clearly marked, reducing runtime errors from accessing wrong platform fields.\\n\\n### \u2705 Better Developer Experience\\n\\nConsistent naming conventions make the API more predictable and easier to use.\\n\\n### \u2705 Enhanced Cross-Platform Support\\n\\nCommon fields like `purchaseState` and `isAutoRenewing` provide unified interfaces across platforms.\\n\\n### \u2705 More Detailed Information\\n\\nNew enums and return types provide richer information about products and purchases.\\n\\n## Fixed\\n\\n- iOS: Fetch missing products from StoreKit when not cached\\n\\n## Upgrading\\n\\n```bash\\nnpm install react-native-iap react-native-nitro-modules\\n```\\n\\n## Community\\n\\nThank you to all contributors who helped make this release possible!\\n\\nFor questions or issues, please visit our [GitHub repository](https://github.com/hyochan/react-native-iap)."},{"id":"release-14-0-0","metadata":{"permalink":"/react-native-iap/blog/release-14-0-0","editUrl":"https://github.com/hyochan/react-native-iap/tree/main/docs/blog/2025-09-03-release-14.0.0.md","source":"@site/blog/2025-09-03-release-14.0.0.md","title":"Release 14.0.0 - Expo Plugin Fixes","description":"We\'ve just released React Native IAP 14.0.0 with important fixes for Expo plugin and npm publishing. \ud83d\udee0\ufe0f","date":"2025-09-03T00:00:00.000Z","tags":[{"inline":false,"label":"Release","permalink":"/react-native-iap/blog/tags/release","description":"New version releases and updates"},{"inline":false,"label":"React Native IAP","permalink":"/react-native-iap/blog/tags/","description":"In-app purchase library for Expo and React Native"}],"readingTime":0.6,"hasTruncateMarker":true,"authors":[{"name":"Hyo","title":"React Native IAP Maintainer","url":"https://github.com/hyochan","page":{"permalink":"/react-native-iap/blog/authors/hyochan"},"socials":{"github":"https://github.com/hyochan","linkedin":"https://www.linkedin.com/in/hyochanjang/","x":"https://x.com/hyodotdev"},"imageURL":"https://github.com/hyochan.png","key":"hyochan"}],"frontMatter":{"slug":"release-14-0-0","title":"Release 14.0.0 - Expo Plugin Fixes","authors":["hyochan"],"tags":["release","react-native-iap"],"date":"2025-09-03T00:00:00.000Z"},"unlisted":false,"prevItem":{"title":"Release 14.1.0 - Type System Improvements & API Enhancements","permalink":"/react-native-iap/blog/release-14-1-0"},"nextItem":{"title":"React Native IAP Reborn","permalink":"/react-native-iap/blog/welcome-to-react-native-iap"}},"content":"We\'ve just released React Native IAP 14.0.0 with important fixes for Expo plugin and npm publishing. \ud83d\udee0\ufe0f\\n\\n\x3c!-- truncate --\x3e\\n\\n## What\'s Fixed\\n\\n### NPM Publishing\\n\\nFixed the npm package to properly include all required build files. The `lib/` directory and `app.plugin.js` are now correctly included when publishing to npm.\\n\\n### CI and Testing\\n\\nImproved test stability and added Codecov integration for better code coverage tracking. Tests now run reliably in CI environments.\\n\\n### Example-Expo Setup\\n\\nResolved Nitro module registration issues in the example-expo app, making it easier to test and develop with Expo.\\n\\n## Upgrading\\n\\n```bash\\nnpm install react-native-iap@14.0.0\\n# or\\nyarn add react-native-iap@14.0.0\\n```\\n\\nFor the full changelog, see our [GitHub releases](https://github.com/hyochan/react-native-iap/releases)."},{"id":"welcome-to-react-native-iap","metadata":{"permalink":"/react-native-iap/blog/welcome-to-react-native-iap","editUrl":"https://github.com/hyochan/react-native-iap/tree/main/docs/blog/2025-09-03-welcome.md","source":"@site/blog/2025-09-03-welcome.md","title":"React Native IAP Reborn","description":"React Native IAP has been completely renewed with cutting-edge Nitro Modules architecture! \ud83d\ude80","date":"2025-09-03T00:00:00.000Z","tags":[{"inline":false,"label":"React Native IAP","permalink":"/react-native-iap/blog/tags/","description":"In-app purchase library for Expo and React Native"},{"inline":false,"label":"In-App Purchase","permalink":"/react-native-iap/blog/tags/in-app-purchase","description":"Mobile in-app purchase implementation"},{"inline":false,"label":"React Native","permalink":"/react-native-iap/blog/tags/react-native","description":"React Native development"}],"readingTime":1.52,"hasTruncateMarker":true,"authors":[{"name":"Hyo","title":"React Native IAP Maintainer","url":"https://github.com/hyochan","page":{"permalink":"/react-native-iap/blog/authors/hyochan"},"socials":{"github":"https://github.com/hyochan","linkedin":"https://www.linkedin.com/in/hyochanjang/","x":"https://x.com/hyodotdev"},"imageURL":"https://github.com/hyochan.png","key":"hyochan"}],"frontMatter":{"slug":"welcome-to-react-native-iap","title":"React Native IAP Reborn","authors":["hyochan"],"tags":["react-native-iap","in-app-purchase","react-native"],"date":"2025-09-03T00:00:00.000Z"},"unlisted":false,"prevItem":{"title":"Release 14.0.0 - Expo Plugin Fixes","permalink":"/react-native-iap/blog/release-14-0-0"}},"content":"**React Native IAP** has been completely renewed with cutting-edge Nitro Modules architecture! \ud83d\ude80\\n\\nWe\'re excited to share this comprehensive resource for developers looking to implement in-app purchases in their Expo and React Native applications.\\n\\n\x3c!-- truncate --\x3e\\n\\n## \ud83c\udfd7\ufe0f New Architecture Support!\\n\\n**React Native IAP v14.0.0** brings full support for React Native\'s New Architecture! \ud83d\ude80\\n\\n### Powered by Nitro Modules\\n\\nWe\'ve completely rewritten React Native IAP using [Nitro Modules](https://github.com/mrousavy/nitro), bringing you:\\n\\n- **\u26a1 Lightning-fast Performance** - Direct JSI bindings eliminate bridge overhead\\n- **\ud83d\udd12 Type-safe Native APIs** - Full TypeScript support from JavaScript to native code\\n- **\ud83c\udfaf Synchronous Native Calls** - No more async/await for simple getters\\n- **\ud83d\udce6 Smaller Bundle Size** - Optimized code generation reduces app size\\n- **\ud83d\udee0\ufe0f Better Developer Experience** - Auto-completion and type checking for all native methods\\n\\n### Key Improvements\\n\\n- **Zero Bridge Overhead**: Direct C++ to JavaScript communication via JSI\\n- **Fabric & TurboModules Ready**: Full compatibility with React Native\'s New Architecture\\n- **Backwards Compatible**: Works seamlessly with both old and new architecture apps\\n- **Modern Native Code**: Rewritten with Swift (iOS) and Kotlin (Android) for better maintainability\\n\\n### Migration Made Easy\\n\\nUpgrading from v13? Our migration is designed to be smooth:\\n\\n- Most APIs remain the same with enhanced TypeScript types\\n- Improved error handling with structured error objects\\n- Better subscription management with new helper methods\\n\\n## What\'s New\\n\\nThis documentation site features:\\n\\n- **\ud83d\ude80 Quick Start Guide** - Get up and running in 5 minutes\\n- **\ud83d\udcf1 Platform-specific Setup** - Detailed guides for iOS and Android\\n- **\ud83c\udfa3 useIAP Hook API** - Complete API reference with examples\\n- **\u26a0\ufe0f Error Handling** - Centralized error code management\\n- **\ud83c\udfa8 Beautiful Design** - Clean, modern interface with oatmeal theme\\n- **\ud83c\udfd7\ufe0f New Architecture Support** - Full compatibility with Fabric and TurboModules\\n\\n## Getting Started\\n\\nReady to add in-app purchases to your app? Start with our [installation guide](/docs/installation) and follow our step-by-step setup process.\\n\\nHave questions or feedback? We\'d love to hear from you on [GitHub](https://github.com/hyochan/react-native-iap)!"}]}}')}}]);