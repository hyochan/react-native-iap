"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2529],{5680:(e,t,a)=>{a.d(t,{xA:()=>s,yg:()=>g});var n=a(6540);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var d=n.createContext({}),p=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=p(e.components);return n.createElement(d.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=p(a),m=i,g=c["".concat(d,".").concat(m)]||c[m]||u[m]||r;return a?n.createElement(g,o(o({ref:t},s),{},{components:a})):n.createElement(g,o({ref:t},s))}));function g(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=m;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[c]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},1027:(e,t,a)=>{a.d(t,{A:()=>r});var n=a(6540);function i(e){let{className:t="adfit",style:a,unit:i,height:r,width:o}=e;return(0,n.useEffect)((()=>{let e=document.createElement("ins"),a=document.createElement("script");e.className="kakao_ad_area",e.style="display:none; width:100%;",a.async="true",a.type="text/javascript",a.src="//t1.daumcdn.net/kas/static/ba.min.js",e.setAttribute("data-ad-width",o.toString()),e.setAttribute("data-ad-height",r.toString()),e.setAttribute("data-ad-unit",i.toString()),document.querySelector(`.${t}`).appendChild(e),document.querySelector(`.${t}`).appendChild(a)}),[]),n.createElement("div",{style:a},n.createElement("div",{className:t}))}function r(){return n.createElement(i,{unit:"DAN-YTmjDwlbcP42HBg6",height:100,width:320,className:"adfit-top",style:{flex:1,marginTop:24,marginBottom:24}})}},1898:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>d,toc:()=>s});var n=a(8168),i=(a(6540),a(5680)),r=a(1027);const o={title:"Migrating to 13.0.0",sidebar_label:"Migrating to 13.0.0"},l=void 0,d={unversionedId:"migrate_to_13.0.0",id:"migrate_to_13.0.0",title:"Migrating to 13.0.0",description:"This version brings react-native-iap in line with expo-iap v2.5.2, adding several new features and field names for better compatibility.",source:"@site/docs/migrate_to_13.0.0.mdx",sourceDirName:".",slug:"/migrate_to_13.0.0",permalink:"/docs/migrate_to_13.0.0",draft:!1,editUrl:"https://github.com/hyochan/react-native-iap/edit/main/docs/docs/migrate_to_13.0.0.mdx",tags:[],version:"current",frontMatter:{title:"Migrating to 13.0.0",sidebar_label:"Migrating to 13.0.0"},sidebar:"tutorialSidebar",previous:{title:"Migrating to 12.0.0",permalink:"/docs/migrate_to_12.0.0"},next:{title:"Available Purchase",permalink:"/docs/old-to-remove-available-purchase"}},p={},s=[{value:"New Features",id:"new-features",level:2},{value:"iOS Receipt Validation",id:"ios-receipt-validation",level:3},{value:"Enhanced useIAP Hook",id:"enhanced-useiap-hook",level:3},{value:"iOS 16+ Transaction Fields",id:"ios-16-transaction-fields",level:3},{value:"Field Name Compatibility",id:"field-name-compatibility",level:2},{value:"Product Fields",id:"product-fields",level:3},{value:"Purchase Fields",id:"purchase-fields",level:3},{value:"Android-specific Fields",id:"android-specific-fields",level:3},{value:"Type Updates",id:"type-updates",level:2},{value:"Backward Compatibility",id:"backward-compatibility",level:2},{value:"Example Migration",id:"example-migration",level:2}],c={toc:s},u="wrapper";function m(e){let{components:t,...a}=e;return(0,i.yg)(u,(0,n.A)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,i.yg)(r.A,{mdxType:"AdFitTopFixed"}),(0,i.yg)("h1",{id:"migrating-to-1300"},"Migrating to 13.0.0"),(0,i.yg)("p",null,"This version brings react-native-iap in line with expo-iap v2.5.2, adding several new features and field names for better compatibility."),(0,i.yg)("h2",{id:"new-features"},"New Features"),(0,i.yg)("h3",{id:"ios-receipt-validation"},"iOS Receipt Validation"),(0,i.yg)("p",null,"Added new methods for iOS receipt validation:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-ts"},"import { getReceiptIos, validateReceiptIos } from 'react-native-iap';\n\n// Get the receipt data\nconst receipt = await getReceiptIos();\n\n// Validate the receipt with Apple's servers\nconst validationResult = await validateReceiptIos({\n  'receipt-data': receipt,\n  password: 'your-shared-secret', // Only for auto-renewable subscriptions\n}, true); // isTest: true for sandbox, false for production\n")),(0,i.yg)("h3",{id:"enhanced-useiap-hook"},"Enhanced useIAP Hook"),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"useIAP")," hook now supports callbacks and additional methods:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-ts"},"const { \n  restorePurchases,\n  validateReceipt,\n} = useIAP({\n  onPurchaseSuccess: (purchase) => {\n    console.log('Purchase successful:', purchase);\n  },\n  onPurchaseError: (error) => {\n    console.error('Purchase failed:', error);\n  },\n  onRestoreSuccess: (purchases) => {\n    console.log('Restore successful:', purchases);\n  },\n  onRestoreError: (error) => {\n    console.error('Restore failed:', error);\n  },\n});\n")),(0,i.yg)("h3",{id:"ios-16-transaction-fields"},"iOS 16+ Transaction Fields"),(0,i.yg)("p",null,"New transaction fields for iOS 16 and 17:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"jwsRepresentationIos"),": JWS representation of the transaction (StoreKit 2)"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"environmentIos"),": Transaction environment (Production/Sandbox)"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"storefrontCountryCodeIos"),": Storefront country code"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"reasonIos"),": Transaction reason (iOS 16.4+)"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"offerIos"),": Promotional offer information (iOS 17.2+)"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"priceIos"),": Transaction price (iOS 17.2+)"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"currencyIos"),": Transaction currency (iOS 17.2+)")),(0,i.yg)("h2",{id:"field-name-compatibility"},"Field Name Compatibility"),(0,i.yg)("p",null,"To ensure compatibility with expo-iap, the following field names are now available alongside the existing ones:"),(0,i.yg)("h3",{id:"product-fields"},"Product Fields"),(0,i.yg)("table",null,(0,i.yg)("thead",{parentName:"table"},(0,i.yg)("tr",{parentName:"thead"},(0,i.yg)("th",{parentName:"tr",align:null},"Original Field"),(0,i.yg)("th",{parentName:"tr",align:null},"New Compatible Field"))),(0,i.yg)("tbody",{parentName:"table"},(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("inlineCode",{parentName:"td"},"productId")),(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("inlineCode",{parentName:"td"},"id"))),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("inlineCode",{parentName:"td"},"productIds")),(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("inlineCode",{parentName:"td"},"ids"))),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("inlineCode",{parentName:"td"},"productType")),(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("inlineCode",{parentName:"td"},"type"))),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("inlineCode",{parentName:"td"},"name")),(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("inlineCode",{parentName:"td"},"displayName"))))),(0,i.yg)("h3",{id:"purchase-fields"},"Purchase Fields"),(0,i.yg)("table",null,(0,i.yg)("thead",{parentName:"table"},(0,i.yg)("tr",{parentName:"thead"},(0,i.yg)("th",{parentName:"tr",align:null},"Original Field"),(0,i.yg)("th",{parentName:"tr",align:null},"New Compatible Field"))),(0,i.yg)("tbody",{parentName:"table"},(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("inlineCode",{parentName:"td"},"productId")),(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("inlineCode",{parentName:"td"},"id"))),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("inlineCode",{parentName:"td"},"productIds")),(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("inlineCode",{parentName:"td"},"ids"))),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("inlineCode",{parentName:"td"},"purchaseToken")),(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("inlineCode",{parentName:"td"},"purchaseTokenAndroid"))))),(0,i.yg)("p",null,"All responses now include a ",(0,i.yg)("inlineCode",{parentName:"p"},"platform")," field set to either ",(0,i.yg)("inlineCode",{parentName:"p"},'"ios"')," or ",(0,i.yg)("inlineCode",{parentName:"p"},'"android"'),"."),(0,i.yg)("h3",{id:"android-specific-fields"},"Android-specific Fields"),(0,i.yg)("p",null,"For Android products with one-time purchase details:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"currency"),": Currency code from ",(0,i.yg)("inlineCode",{parentName:"li"},"oneTimePurchaseOfferDetails")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"displayPrice"),": Formatted price from ",(0,i.yg)("inlineCode",{parentName:"li"},"oneTimePurchaseOfferDetails"))),(0,i.yg)("h2",{id:"type-updates"},"Type Updates"),(0,i.yg)("p",null,"New discriminated union types are available for better type safety:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-ts"},"import { ProductWithPlatform, PurchaseWithPlatform } from 'react-native-iap';\n\n// These types include platform discrimination\nconst product: ProductWithPlatform = {\n  platform: 'ios',\n  productId: 'com.example.product',\n  // ... iOS-specific fields\n};\n\nconst purchase: PurchaseWithPlatform = {\n  platform: 'android',\n  productId: 'com.example.product',\n  purchaseTokenAndroid: '...',\n  // ... Android-specific fields\n};\n")),(0,i.yg)("h2",{id:"backward-compatibility"},"Backward Compatibility"),(0,i.yg)("p",null,"All original field names are maintained for backward compatibility. Your existing code will continue to work without changes. The new field names are added alongside the existing ones to provide compatibility with expo-iap."),(0,i.yg)("h2",{id:"example-migration"},"Example Migration"),(0,i.yg)("p",null,"If you're migrating from expo-iap to react-native-iap, you can now use the same field names:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-ts"},"// Works with both expo-iap and react-native-iap 13.0.0+\nproducts.map(product => ({\n  id: product.id,              // Same as productId\n  type: product.type,          // Same as productType\n  displayName: product.displayName, // Same as name\n  platform: product.platform,  // 'ios' or 'android'\n}));\n")))}m.isMDXComponent=!0}}]);