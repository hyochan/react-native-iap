name: CI - Android Build
on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/ci-android.yml'
      - '.github/actions/**'
      - 'android/**'
      - 'nitrogen/**'
      - 'src/types/**'
      - 'src/*.nitro.ts'
      - 'example/android/**'
      - 'example/package.json'
      - 'nitro.json'
  pull_request:
    branches:
      - main
    paths:
      - '.github/workflows/ci-android.yml'
      - '.github/actions/**'
      - 'android/**'
      - 'nitrogen/**'
      - 'src/types/**'
      - 'src/*.nitro.ts'
      - 'example/android/**'
      - 'example/package.json'
      - 'nitro.json'
  merge_group:
    types:
      - checks_requested

jobs:
  build-android:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      GRADLE_OPTS: '-Dorg.gradle.daemon=true -Dorg.gradle.parallel=true -Dorg.gradle.configureondemand=true -Dorg.gradle.jvmargs="-Xmx4096m -XX:MaxMetaspaceSize=1024m -XX:+HeapDumpOnOutOfMemoryError"'
      GRADLE_USER_HOME: ${{ github.workspace }}/.gradle
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Generate nitrogen code
        run: node .yarn/releases/yarn-3.6.1.cjs nitrogen

      - name: Install JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/wrapper
            ~/.gradle/caches
            example/android/.gradle
            example/android/app/build
            example/android/build
          key: ${{ runner.os }}-gradle-${{ hashFiles('example/android/gradle/wrapper/gradle-wrapper.properties', 'example/android/**/*.gradle*', 'example/android/gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache Kotlin
        uses: actions/cache@v4
        with:
          path: |
            ~/.konan
          key: ${{ runner.os }}-kotlin-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-kotlin-

      - name: Accept Android SDK licenses
        run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true


      - name: Build Android app
        working-directory: example/android
        run: ./gradlew :app:assembleDebug --build-cache --parallel --configure-on-demand --stacktrace
